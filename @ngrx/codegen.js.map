{"version":3,"file":"codegen.js","sources":["../../../modules/codegen/index.ts","../../../modules/codegen/src/codegen.ts","../../../modules/codegen/src/find-files.ts","../../../modules/codegen/src/collect-metadata.ts","../../../modules/codegen/src/printers/type-union-declaration.ts","../../../modules/codegen/src/printers/type-dictionary-declaration.ts","../../../modules/codegen/src/printers/import-declaration.ts","../../../modules/codegen/src/printers/enum-declaration.ts","../../../modules/codegen/src/printers/action-factory-declaration.ts","../../../modules/codegen/src/action-interface.ts","../../../modules/codegen/src/metadata/is-exported.ts","../../../modules/codegen/src/metadata/is-action-descendent.ts","../../../modules/codegen/src/metadata/get-type.ts","../../../modules/codegen/src/metadata/get-required-properties.ts","../../../modules/codegen/src/metadata/get-properties.ts","../../../modules/codegen/src/metadata/get-optional-properties.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {codegen} from './public_api';\n","import * as fs from 'fs';\nimport * as path from 'path';\nimport * as ts from 'typescript';\nimport { collectMetadata, printActionFactory } from './collect-metadata';\nimport { findFiles } from './find-files';\nconst /** @type {?} */ ora = require('ora');\n/**\n * @param {?} file\n * @return {?}\n */\nasync function readFile(file: string): Promise<string> {\n  return new Promise<string>((resolve, reject) => {\n    fs.readFile(file, 'utf8', (error, data) => {\n      if (error) {\n        reject(error);\n      } else {\n        resolve(data);\n      }\n    });\n  });\n}\n/**\n * @param {?} file\n * @param {?} contents\n * @return {?}\n */\nasync function writeFile(file: string, contents: string): Promise<any> {\n  return new Promise((resolve, reject) => {\n    fs.writeFile(file, contents, { encoding: 'utf8' }, error => {\n      if (error) {\n        reject(error);\n      } else {\n        resolve();\n      }\n    });\n  });\n}\n/**\n * @param {?} data\n * @return {?}\n */\nfunction createSourceFile(data: string) {\n  return ts.createSourceFile('', data, ts.ScriptTarget.ES2015, true);\n}\n/**\n * @param {?} glob\n * @return {?}\n */\nexport async function codegen(glob: string) {\n  const /** @type {?} */ filesIndicator = ora(`Searching for files matching \"${glob}\"`).start();\n  const /** @type {?} */ files = await findFiles(glob);\n  filesIndicator.succeed(`Found ${files.length} files for pattern \"${glob}\"`);\n\n  for (let /** @type {?} */ file of files) {\n    const /** @type {?} */ indicator = ora(file).start();\n\n    try {\n      const /** @type {?} */ parsedPath = path.parse(file);\n      const /** @type {?} */ contents = await readFile(file);\n      const /** @type {?} */ sourceFile = createSourceFile(contents);\n      const /** @type {?} */ ast = collectMetadata(parsedPath.name, sourceFile);\n\n      if (!ast) {\n        throw new Error(`No actions found for file \"${file}\"`);\n      }\n\n      const /** @type {?} */ output = printActionFactory(ast);\n      const /** @type {?} */ target = path.resolve(\n        parsedPath.dir,\n        `./${parsedPath.name}.helpers.ts`\n      );\n      await writeFile(target, output);\n\n      indicator.succeed(`Found ${ast.length} actions in ${file}`);\n    } catch ( /** @type {?} */e) {\n      indicator.fail(( /** @type {?} */((e as Error))).message);\n    }\n  }\n}\n","import * as path from 'path';\nconst /** @type {?} */ glob = require('glob');\n/**\n * @param {?} globPattern\n * @return {?}\n */\nexport function findFiles(globPattern: string): Promise<string[]> {\n  return new Promise((resolve, reject) => {\n    glob(\n      globPattern,\n      { cwd: process.cwd(), ignore: ['**/node_modules/**'] },\n      (error: any, files: string[]) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(files);\n      }\n    );\n  });\n}\n","import * as ts from 'typescript';\nimport * as _ from 'lodash';\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport * as collector from './metadata/index';\nimport * as printers from './printers/index';\nimport { ActionInterface } from './action-interface';\n\nexport interface ActionMetadata {\n  name: string;\n  type: string;\n  properties: { name: string; optional: boolean }[];\n}\n/**\n * @param {?} fileName\n * @param {?} sourceFile\n * @return {?}\n */\nexport function collectMetadata(\n  fileName: string,\n  sourceFile: ts.SourceFile\n): ts.Node[] | undefined {\n  const /** @type {?} */ interfaces = sourceFile.statements\n    .filter(ts.isInterfaceDeclaration)\n    .filter(collector.isExported)\n    .filter(collector.isActionDescendent)\n    .filter(m => !!collector.getType(m))\n    .map((enterface): ActionInterface => ({\n      name: enterface.name.getText(),\n      actionType: _.trim( /** @type {?} */((\n        collector.getType(enterface))).literal.getFullText(),\n        ' \\'\"`'\n      ),\n      properties: [\n        ...collector.getRequiredProperties(collector.getProperties(enterface)),\n        ...collector.getOptionalProperties(collector.getProperties(enterface)),\n      ],\n    }));\n\n  if (interfaces.length === 0) {\n    undefined;\n  }\n\n  return [\n    printers.printImportDeclaration(fileName, interfaces),\n    printers.printEnumDeclaration(interfaces),\n    printers.printTypeUnionDeclaration(interfaces),\n    printers.printTypeDictionaryDeclaration(interfaces),\n    ...interfaces.map(action => printers.printActionFactoryDeclaration(action)),\n  ];\n}\n/**\n * @param {?} ast\n * @return {?}\n */\nexport function printActionFactory(ast: ts.Node[]) {\n  const /** @type {?} */ resultFile = ts.createSourceFile(\n    '',\n    '',\n    ts.ScriptTarget.ES2015,\n    false,\n    ts.ScriptKind.TS\n  );\n\n  const /** @type {?} */ printer = ts.createPrinter({ newLine: ts.NewLineKind.LineFeed });\n\n  return ast\n    .map(statement =>\n      printer.printNode(ts.EmitHint.Unspecified, statement, resultFile)\n    )\n    .join('\\n\\n');\n}\n","import * as ts from 'typescript';\nimport {\n  ActionInterface,\n  getActionName,\n  getActionUnionName,\n} from '../action-interface';\n/**\n * @param {?} actions\n * @return {?}\n */\nexport function printTypeUnionDeclaration(actions: ActionInterface[]) {\n  const [firstAction] = actions;\n\n  return ts.createTypeAliasDeclaration(\n    undefined,\n    [ts.createToken(ts.SyntaxKind.ExportKeyword)],\n    getActionUnionName(firstAction),\n    undefined,\n    ts.createUnionTypeNode(\n      actions\n        .map(getActionName)\n        .map(name => ts.createTypeReferenceNode(name, undefined))\n    )\n  );\n}\n","import * as ts from 'typescript';\nimport {\n  ActionInterface,\n  getActionLookupName,\n  getActionType,\n  getActionName,\n} from '../action-interface';\n/**\n * @param {?} actions\n * @return {?}\n */\nexport function printTypeDictionaryDeclaration(actions: ActionInterface[]) {\n  const [firstAction] = actions;\n\n  return ts.createTypeAliasDeclaration(\n    undefined,\n    [ts.createToken(ts.SyntaxKind.ExportKeyword)],\n    getActionLookupName(firstAction),\n    undefined,\n    ts.createTypeLiteralNode(\n      actions.map(action => {\n        return ts.createPropertySignature(\n          undefined,\n          JSON.stringify(getActionType(action)),\n          undefined,\n          ts.createTypeReferenceNode(getActionName(action), undefined),\n          undefined\n        );\n      })\n    )\n  );\n}\n","import * as ts from 'typescript';\nimport { ActionInterface, getActionName } from '../action-interface';\n/**\n * @param {?} filename\n * @param {?} actions\n * @return {?}\n */\nexport function printImportDeclaration(\n  filename: string,\n  actions: ActionInterface[]\n) {\n  return ts.createImportDeclaration(\n    undefined,\n    undefined,\n    ts.createImportClause(\n      undefined,\n      ts.createNamedImports(\n        actions\n          .map(getActionName)\n          .map(name =>\n            ts.createImportSpecifier(undefined, ts.createIdentifier(name))\n          )\n      )\n    ),\n    ts.createIdentifier(`'./${filename}'`)\n  );\n}\n","import * as ts from 'typescript';\nimport {\n  ActionInterface,\n  getActionEnumName,\n  getActionEnumPropName,\n  getActionType,\n} from '../action-interface';\n/**\n * @param {?} actions\n * @return {?}\n */\nexport function printEnumDeclaration(actions: ActionInterface[]) {\n  const [firstInterface] = actions;\n\n  return ts.createEnumDeclaration(\n    undefined,\n    [ts.createToken(ts.SyntaxKind.ExportKeyword)],\n    getActionEnumName(firstInterface),\n    actions\n      .map(action => ({\n        prop: getActionEnumPropName(action),\n        value: getActionType(action),\n      }))\n      .map(({ prop, value }) => {\n        return ts.createEnumMember(prop, ts.createLiteral(value));\n      })\n  );\n}\n","import * as ts from 'typescript';\nimport {\n  ActionInterface,\n  getActionFactoryName,\n  getActionName,\n  getActionEnumName,\n  getActionEnumPropName,\n} from '../action-interface';\n/**\n * @param {?} action\n * @return {?}\n */\nexport function printActionFactoryDeclaration(action: ActionInterface) {\n  return ts.createFunctionDeclaration(\n    undefined,\n    [ts.createToken(ts.SyntaxKind.ExportKeyword)],\n    undefined,\n    getActionFactoryName(action),\n    undefined,\n    action.properties.map(({ name, required }) => {\n      return ts.createParameter(\n        undefined,\n        undefined,\n        undefined,\n        name,\n        required ? undefined : ts.createToken(ts.SyntaxKind.QuestionToken),\n        ts.createTypeReferenceNode(\n          `${getActionName(action)}[\"${name}\"]`,\n          undefined\n        ),\n        undefined\n      );\n    }),\n    ts.createTypeReferenceNode(getActionName(action), undefined),\n    ts.createBlock(\n      [\n        ts.createReturn(\n          ts.createObjectLiteral([\n            ts.createPropertyAssignment(\n              'type',\n              ts.createPropertyAccess(\n                ts.createIdentifier(getActionEnumName(action)),\n                ts.createIdentifier(getActionEnumPropName(action))\n              )\n            ),\n            ...action.properties.map(({ name }) => {\n              return ts.createShorthandPropertyAssignment(name, undefined);\n            }),\n          ])\n        ),\n      ],\n      true\n    )\n  );\n}\n","import * as _ from 'lodash';\n\nexport interface ActionInterfaceProperty {\n  name: string;\n  required: boolean;\n}\n\nexport interface ActionInterface {\n  name: string;\n  actionType: string;\n  properties: ActionInterfaceProperty[];\n}\n\nconst /** @type {?} */ actionTypeRegex = new RegExp(/\\[(.*?)\\](.*)/);\n/**\n * @param {?} type\n * @return {?}\n */\nfunction parseActionType(type: string) {\n  const /** @type {?} */ result = actionTypeRegex.exec(type);\n\n  if (result === null) {\n    throw new Error(`Could not parse action type \"${type}\"`);\n  }\n\n  return {\n    category: /** @type {?} */(( result[1] as string)),\n    name: /** @type {?} */(( result[2] as string)),\n  };\n}\n\nexport const /** @type {?} */ getActionType = (enterface: ActionInterface) =>\n  enterface.actionType;\nexport const /** @type {?} */ getActionName = (enterface: ActionInterface) => enterface.name;\nexport const /** @type {?} */ getActionCategory = _.flow(\n  getActionType,\n  parseActionType,\n  v => v.category\n);\nexport const /** @type {?} */ getActionCategoryToken = _.flow(\n  getActionCategory,\n  _.camelCase,\n  _.upperFirst\n);\nexport const /** @type {?} */ getActionEnumName = _.flow(\n  getActionCategoryToken,\n  v => `${v}ActionType`\n);\nexport const /** @type {?} */ getActionEnumPropName = _.flow(getActionName, _.snakeCase, v =>\n  v.toUpperCase()\n);\nexport const /** @type {?} */ getActionUnionName = _.flow(\n  getActionCategoryToken,\n  v => `${v}Actions`\n);\nexport const /** @type {?} */ getActionLookupName = _.flow(\n  getActionCategoryToken,\n  v => `${v}ActionLookup`\n);\nexport const /** @type {?} */ getActionFactoryName = _.flow(\n  getActionName,\n  _.camelCase,\n  _.upperFirst,\n  v => `create${v}`\n);\n","import * as ts from 'typescript';\n/**\n * @param {?} node\n * @return {?}\n */\nfunction hasExportModifier(node: ts.Node): boolean {\n  return (ts.getCombinedModifierFlags(node) & ts.ModifierFlags.Export) !== 0;\n}\n/**\n * @param {?} node\n * @return {?}\n */\nfunction isTopLevel(node: ts.Node): boolean {\n  return !!node.parent && node.parent.kind === ts.SyntaxKind.SourceFile;\n}\n/**\n * @param {?} node\n * @return {?}\n */\nexport function isExported(node: ts.Node): boolean {\n  return hasExportModifier(node) && isTopLevel(node);\n}\n","import * as ts from 'typescript';\n/**\n * @param {?} statement\n * @return {?}\n */\nexport function isActionDescendent(\n  statement: ts.InterfaceDeclaration\n): boolean {\n  const /** @type {?} */ heritageClauses = statement.heritageClauses;\n\n  if (heritageClauses) {\n    return heritageClauses.some(clause => {\n      /**\n       * TODO: This breaks if the interface looks like this:\n       * \n       *   interface MyAction extends ngrx.Action { }\n       * \n       */\n      return clause.types.some(type => type.expression.getText() === 'Action');\n    });\n  }\n\n  return false;\n}\n","import * as ts from 'typescript';\nimport { getProperties } from './get-properties';\n/**\n * @param {?} action\n * @return {?}\n */\nexport function getType(\n  action: ts.InterfaceDeclaration\n): ts.LiteralTypeNode | undefined {\n  const /** @type {?} */ typeProperty = getProperties(action).find(\n    property => property.name.getText() === 'type'\n  );\n\n  if (!typeProperty) {\n    return undefined;\n  }\n\n  return ts.isLiteralTypeNode( /** @type {?} */((typeProperty.type as any)))\n    ? /** @type {?} */(( typeProperty.type as any))\n    : undefined;\n\n  // return !!typeProperty && ts.isLiteralTypeNode(typeProperty.type) ? typeProperty.type : undefined;\n}\n","import * as ts from 'typescript';\nimport { ActionInterfaceProperty } from '../action-interface';\n/**\n * @param {?} props\n * @return {?}\n */\nexport function getRequiredProperties(\n  props: ts.PropertySignature[]\n): ActionInterfaceProperty[] {\n  return props\n    .filter(prop => !prop.questionToken)\n    .map(prop => ({\n      name: prop.name.getText(),\n      required: true,\n    }))\n    .filter(({ name }) => name !== 'type');\n}\n","import * as ts from 'typescript';\n/**\n * @param {?} node\n * @return {?}\n */\nexport function getProperties(\n  node: ts.InterfaceDeclaration\n): ts.PropertySignature[] {\n  return node.members.filter(ts.isPropertySignature);\n}\n","import * as ts from 'typescript';\nimport { ActionInterfaceProperty } from '../action-interface';\n/**\n * @param {?} props\n * @return {?}\n */\nexport function getOptionalProperties(\n  props: ts.PropertySignature[]\n): ActionInterfaceProperty[] {\n  return props.filter(prop => prop.questionToken).map(prop => ({\n    name: prop.name.getText(),\n    required: false,\n  }));\n}\n"],"names":["writeFile","path.resolve","createSourceFile","readFile","path.parse","ts.createSourceFile","ts.ScriptTarget","resolve","fs.writeFile","fs.readFile","ts.EmitHint","ts.createPrinter","ts.NewLineKind","ts.ScriptKind","printers.printActionFactoryDeclaration","printers.printTypeDictionaryDeclaration","printers.printTypeUnionDeclaration","printers.printEnumDeclaration","printers.printImportDeclaration","collector.getOptionalProperties","collector.getProperties","collector.getRequiredProperties","_.trim","collector.getType","collector.isActionDescendent","collector.isExported","ts.isInterfaceDeclaration","ts.createTypeReferenceNode","ts.createTypeAliasDeclaration","ts.createToken","ts.SyntaxKind","ts.createUnionTypeNode","ts.createPropertySignature","ts.createTypeLiteralNode","ts.createImportSpecifier","ts.createIdentifier","ts.createImportDeclaration","ts.createImportClause","ts.createNamedImports","ts.createEnumMember","ts.createLiteral","ts.createEnumDeclaration","ts.createShorthandPropertyAssignment","ts.createPropertyAssignment","ts.createPropertyAccess","ts.createReturn","ts.createObjectLiteral","ts.createBlock","ts.createParameter","ts.createFunctionDeclaration","_.flow","_.camelCase","_.upperFirst","_.snakeCase","ts.getCombinedModifierFlags","ts.ModifierFlags","ts.isLiteralTypeNode","ts.isPropertySignature"],"mappings":"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"}