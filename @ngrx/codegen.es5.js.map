{"version":3,"file":"codegen.es5.js","sources":["../../../modules/codegen/index.ts","../../../modules/codegen/src/codegen.ts","../../../modules/codegen/src/find-files.ts","../../../modules/codegen/src/collect-metadata.ts","../../../modules/codegen/src/printers/type-union-declaration.ts","../../../modules/codegen/src/printers/type-dictionary-declaration.ts","../../../modules/codegen/src/printers/import-declaration.ts","../../../modules/codegen/src/printers/enum-declaration.ts","../../../modules/codegen/src/printers/action-factory-declaration.ts","../../../modules/codegen/src/action-interface.ts","../../../modules/codegen/src/metadata/is-exported.ts","../../../modules/codegen/src/metadata/is-action-descendent.ts","../../../modules/codegen/src/metadata/get-type.ts","../../../modules/codegen/src/metadata/get-required-properties.ts","../../../modules/codegen/src/metadata/get-properties.ts","../../../modules/codegen/src/metadata/get-optional-properties.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {codegen} from './public_api';\n","import * as fs from 'fs';\nimport * as path from 'path';\nimport * as ts from 'typescript';\nimport { collectMetadata, printActionFactory } from './collect-metadata';\nimport { findFiles } from './find-files';\nconst /** @type {?} */ ora = require('ora');\n/**\n * @param {?} file\n * @return {?}\n */\nasync function readFile(file: string): Promise<string> {\n  return new Promise<string>((resolve, reject) => {\n    fs.readFile(file, 'utf8', (error, data) => {\n      if (error) {\n        reject(error);\n      } else {\n        resolve(data);\n      }\n    });\n  });\n}\n/**\n * @param {?} file\n * @param {?} contents\n * @return {?}\n */\nasync function writeFile(file: string, contents: string): Promise<any> {\n  return new Promise((resolve, reject) => {\n    fs.writeFile(file, contents, { encoding: 'utf8' }, error => {\n      if (error) {\n        reject(error);\n      } else {\n        resolve();\n      }\n    });\n  });\n}\n/**\n * @param {?} data\n * @return {?}\n */\nfunction createSourceFile(data: string) {\n  return ts.createSourceFile('', data, ts.ScriptTarget.ES2015, true);\n}\n/**\n * @param {?} glob\n * @return {?}\n */\nexport async function codegen(glob: string) {\n  const /** @type {?} */ filesIndicator = ora(`Searching for files matching \"${glob}\"`).start();\n  const /** @type {?} */ files = await findFiles(glob);\n  filesIndicator.succeed(`Found ${files.length} files for pattern \"${glob}\"`);\n\n  for (let /** @type {?} */ file of files) {\n    const /** @type {?} */ indicator = ora(file).start();\n\n    try {\n      const /** @type {?} */ parsedPath = path.parse(file);\n      const /** @type {?} */ contents = await readFile(file);\n      const /** @type {?} */ sourceFile = createSourceFile(contents);\n      const /** @type {?} */ ast = collectMetadata(parsedPath.name, sourceFile);\n\n      if (!ast) {\n        throw new Error(`No actions found for file \"${file}\"`);\n      }\n\n      const /** @type {?} */ output = printActionFactory(ast);\n      const /** @type {?} */ target = path.resolve(\n        parsedPath.dir,\n        `./${parsedPath.name}.helpers.ts`\n      );\n      await writeFile(target, output);\n\n      indicator.succeed(`Found ${ast.length} actions in ${file}`);\n    } catch ( /** @type {?} */e) {\n      indicator.fail(( /** @type {?} */((e as Error))).message);\n    }\n  }\n}\n","import * as path from 'path';\nconst /** @type {?} */ glob = require('glob');\n/**\n * @param {?} globPattern\n * @return {?}\n */\nexport function findFiles(globPattern: string): Promise<string[]> {\n  return new Promise((resolve, reject) => {\n    glob(\n      globPattern,\n      { cwd: process.cwd(), ignore: ['**/node_modules/**'] },\n      (error: any, files: string[]) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(files);\n      }\n    );\n  });\n}\n","import * as ts from 'typescript';\nimport * as _ from 'lodash';\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport * as collector from './metadata/index';\nimport * as printers from './printers/index';\nimport { ActionInterface } from './action-interface';\n\nexport interface ActionMetadata {\n  name: string;\n  type: string;\n  properties: { name: string; optional: boolean }[];\n}\n/**\n * @param {?} fileName\n * @param {?} sourceFile\n * @return {?}\n */\nexport function collectMetadata(\n  fileName: string,\n  sourceFile: ts.SourceFile\n): ts.Node[] | undefined {\n  const /** @type {?} */ interfaces = sourceFile.statements\n    .filter(ts.isInterfaceDeclaration)\n    .filter(collector.isExported)\n    .filter(collector.isActionDescendent)\n    .filter(m => !!collector.getType(m))\n    .map((enterface): ActionInterface => ({\n      name: enterface.name.getText(),\n      actionType: _.trim( /** @type {?} */((\n        collector.getType(enterface))).literal.getFullText(),\n        ' \\'\"`'\n      ),\n      properties: [\n        ...collector.getRequiredProperties(collector.getProperties(enterface)),\n        ...collector.getOptionalProperties(collector.getProperties(enterface)),\n      ],\n    }));\n\n  if (interfaces.length === 0) {\n    undefined;\n  }\n\n  return [\n    printers.printImportDeclaration(fileName, interfaces),\n    printers.printEnumDeclaration(interfaces),\n    printers.printTypeUnionDeclaration(interfaces),\n    printers.printTypeDictionaryDeclaration(interfaces),\n    ...interfaces.map(action => printers.printActionFactoryDeclaration(action)),\n  ];\n}\n/**\n * @param {?} ast\n * @return {?}\n */\nexport function printActionFactory(ast: ts.Node[]) {\n  const /** @type {?} */ resultFile = ts.createSourceFile(\n    '',\n    '',\n    ts.ScriptTarget.ES2015,\n    false,\n    ts.ScriptKind.TS\n  );\n\n  const /** @type {?} */ printer = ts.createPrinter({ newLine: ts.NewLineKind.LineFeed });\n\n  return ast\n    .map(statement =>\n      printer.printNode(ts.EmitHint.Unspecified, statement, resultFile)\n    )\n    .join('\\n\\n');\n}\n","import * as ts from 'typescript';\nimport {\n  ActionInterface,\n  getActionName,\n  getActionUnionName,\n} from '../action-interface';\n/**\n * @param {?} actions\n * @return {?}\n */\nexport function printTypeUnionDeclaration(actions: ActionInterface[]) {\n  const [firstAction] = actions;\n\n  return ts.createTypeAliasDeclaration(\n    undefined,\n    [ts.createToken(ts.SyntaxKind.ExportKeyword)],\n    getActionUnionName(firstAction),\n    undefined,\n    ts.createUnionTypeNode(\n      actions\n        .map(getActionName)\n        .map(name => ts.createTypeReferenceNode(name, undefined))\n    )\n  );\n}\n","import * as ts from 'typescript';\nimport {\n  ActionInterface,\n  getActionLookupName,\n  getActionType,\n  getActionName,\n} from '../action-interface';\n/**\n * @param {?} actions\n * @return {?}\n */\nexport function printTypeDictionaryDeclaration(actions: ActionInterface[]) {\n  const [firstAction] = actions;\n\n  return ts.createTypeAliasDeclaration(\n    undefined,\n    [ts.createToken(ts.SyntaxKind.ExportKeyword)],\n    getActionLookupName(firstAction),\n    undefined,\n    ts.createTypeLiteralNode(\n      actions.map(action => {\n        return ts.createPropertySignature(\n          undefined,\n          JSON.stringify(getActionType(action)),\n          undefined,\n          ts.createTypeReferenceNode(getActionName(action), undefined),\n          undefined\n        );\n      })\n    )\n  );\n}\n","import * as ts from 'typescript';\nimport { ActionInterface, getActionName } from '../action-interface';\n/**\n * @param {?} filename\n * @param {?} actions\n * @return {?}\n */\nexport function printImportDeclaration(\n  filename: string,\n  actions: ActionInterface[]\n) {\n  return ts.createImportDeclaration(\n    undefined,\n    undefined,\n    ts.createImportClause(\n      undefined,\n      ts.createNamedImports(\n        actions\n          .map(getActionName)\n          .map(name =>\n            ts.createImportSpecifier(undefined, ts.createIdentifier(name))\n          )\n      )\n    ),\n    ts.createIdentifier(`'./${filename}'`)\n  );\n}\n","import * as ts from 'typescript';\nimport {\n  ActionInterface,\n  getActionEnumName,\n  getActionEnumPropName,\n  getActionType,\n} from '../action-interface';\n/**\n * @param {?} actions\n * @return {?}\n */\nexport function printEnumDeclaration(actions: ActionInterface[]) {\n  const [firstInterface] = actions;\n\n  return ts.createEnumDeclaration(\n    undefined,\n    [ts.createToken(ts.SyntaxKind.ExportKeyword)],\n    getActionEnumName(firstInterface),\n    actions\n      .map(action => ({\n        prop: getActionEnumPropName(action),\n        value: getActionType(action),\n      }))\n      .map(({ prop, value }) => {\n        return ts.createEnumMember(prop, ts.createLiteral(value));\n      })\n  );\n}\n","import * as ts from 'typescript';\nimport {\n  ActionInterface,\n  getActionFactoryName,\n  getActionName,\n  getActionEnumName,\n  getActionEnumPropName,\n} from '../action-interface';\n/**\n * @param {?} action\n * @return {?}\n */\nexport function printActionFactoryDeclaration(action: ActionInterface) {\n  return ts.createFunctionDeclaration(\n    undefined,\n    [ts.createToken(ts.SyntaxKind.ExportKeyword)],\n    undefined,\n    getActionFactoryName(action),\n    undefined,\n    action.properties.map(({ name, required }) => {\n      return ts.createParameter(\n        undefined,\n        undefined,\n        undefined,\n        name,\n        required ? undefined : ts.createToken(ts.SyntaxKind.QuestionToken),\n        ts.createTypeReferenceNode(\n          `${getActionName(action)}[\"${name}\"]`,\n          undefined\n        ),\n        undefined\n      );\n    }),\n    ts.createTypeReferenceNode(getActionName(action), undefined),\n    ts.createBlock(\n      [\n        ts.createReturn(\n          ts.createObjectLiteral([\n            ts.createPropertyAssignment(\n              'type',\n              ts.createPropertyAccess(\n                ts.createIdentifier(getActionEnumName(action)),\n                ts.createIdentifier(getActionEnumPropName(action))\n              )\n            ),\n            ...action.properties.map(({ name }) => {\n              return ts.createShorthandPropertyAssignment(name, undefined);\n            }),\n          ])\n        ),\n      ],\n      true\n    )\n  );\n}\n","import * as _ from 'lodash';\n\nexport interface ActionInterfaceProperty {\n  name: string;\n  required: boolean;\n}\n\nexport interface ActionInterface {\n  name: string;\n  actionType: string;\n  properties: ActionInterfaceProperty[];\n}\n\nconst /** @type {?} */ actionTypeRegex = new RegExp(/\\[(.*?)\\](.*)/);\n/**\n * @param {?} type\n * @return {?}\n */\nfunction parseActionType(type: string) {\n  const /** @type {?} */ result = actionTypeRegex.exec(type);\n\n  if (result === null) {\n    throw new Error(`Could not parse action type \"${type}\"`);\n  }\n\n  return {\n    category: /** @type {?} */(( result[1] as string)),\n    name: /** @type {?} */(( result[2] as string)),\n  };\n}\n\nexport const /** @type {?} */ getActionType = (enterface: ActionInterface) =>\n  enterface.actionType;\nexport const /** @type {?} */ getActionName = (enterface: ActionInterface) => enterface.name;\nexport const /** @type {?} */ getActionCategory = _.flow(\n  getActionType,\n  parseActionType,\n  v => v.category\n);\nexport const /** @type {?} */ getActionCategoryToken = _.flow(\n  getActionCategory,\n  _.camelCase,\n  _.upperFirst\n);\nexport const /** @type {?} */ getActionEnumName = _.flow(\n  getActionCategoryToken,\n  v => `${v}ActionType`\n);\nexport const /** @type {?} */ getActionEnumPropName = _.flow(getActionName, _.snakeCase, v =>\n  v.toUpperCase()\n);\nexport const /** @type {?} */ getActionUnionName = _.flow(\n  getActionCategoryToken,\n  v => `${v}Actions`\n);\nexport const /** @type {?} */ getActionLookupName = _.flow(\n  getActionCategoryToken,\n  v => `${v}ActionLookup`\n);\nexport const /** @type {?} */ getActionFactoryName = _.flow(\n  getActionName,\n  _.camelCase,\n  _.upperFirst,\n  v => `create${v}`\n);\n","import * as ts from 'typescript';\n/**\n * @param {?} node\n * @return {?}\n */\nfunction hasExportModifier(node: ts.Node): boolean {\n  return (ts.getCombinedModifierFlags(node) & ts.ModifierFlags.Export) !== 0;\n}\n/**\n * @param {?} node\n * @return {?}\n */\nfunction isTopLevel(node: ts.Node): boolean {\n  return !!node.parent && node.parent.kind === ts.SyntaxKind.SourceFile;\n}\n/**\n * @param {?} node\n * @return {?}\n */\nexport function isExported(node: ts.Node): boolean {\n  return hasExportModifier(node) && isTopLevel(node);\n}\n","import * as ts from 'typescript';\n/**\n * @param {?} statement\n * @return {?}\n */\nexport function isActionDescendent(\n  statement: ts.InterfaceDeclaration\n): boolean {\n  const /** @type {?} */ heritageClauses = statement.heritageClauses;\n\n  if (heritageClauses) {\n    return heritageClauses.some(clause => {\n      /**\n       * TODO: This breaks if the interface looks like this:\n       * \n       *   interface MyAction extends ngrx.Action { }\n       * \n       */\n      return clause.types.some(type => type.expression.getText() === 'Action');\n    });\n  }\n\n  return false;\n}\n","import * as ts from 'typescript';\nimport { getProperties } from './get-properties';\n/**\n * @param {?} action\n * @return {?}\n */\nexport function getType(\n  action: ts.InterfaceDeclaration\n): ts.LiteralTypeNode | undefined {\n  const /** @type {?} */ typeProperty = getProperties(action).find(\n    property => property.name.getText() === 'type'\n  );\n\n  if (!typeProperty) {\n    return undefined;\n  }\n\n  return ts.isLiteralTypeNode( /** @type {?} */((typeProperty.type as any)))\n    ? /** @type {?} */(( typeProperty.type as any))\n    : undefined;\n\n  // return !!typeProperty && ts.isLiteralTypeNode(typeProperty.type) ? typeProperty.type : undefined;\n}\n","import * as ts from 'typescript';\nimport { ActionInterfaceProperty } from '../action-interface';\n/**\n * @param {?} props\n * @return {?}\n */\nexport function getRequiredProperties(\n  props: ts.PropertySignature[]\n): ActionInterfaceProperty[] {\n  return props\n    .filter(prop => !prop.questionToken)\n    .map(prop => ({\n      name: prop.name.getText(),\n      required: true,\n    }))\n    .filter(({ name }) => name !== 'type');\n}\n","import * as ts from 'typescript';\n/**\n * @param {?} node\n * @return {?}\n */\nexport function getProperties(\n  node: ts.InterfaceDeclaration\n): ts.PropertySignature[] {\n  return node.members.filter(ts.isPropertySignature);\n}\n","import * as ts from 'typescript';\nimport { ActionInterfaceProperty } from '../action-interface';\n/**\n * @param {?} props\n * @return {?}\n */\nexport function getOptionalProperties(\n  props: ts.PropertySignature[]\n): ActionInterfaceProperty[] {\n  return props.filter(prop => prop.questionToken).map(prop => ({\n    name: prop.name.getText(),\n    required: false,\n  }));\n}\n"],"names":["writeFile","path.resolve","createSourceFile","readFile","path.parse","ts.createSourceFile","ts.ScriptTarget","resolve","fs.writeFile","fs.readFile","ts.EmitHint","ts.createPrinter","ts.NewLineKind","ts.ScriptKind","printers.printActionFactoryDeclaration","printers.printTypeDictionaryDeclaration","printers.printTypeUnionDeclaration","printers.printEnumDeclaration","printers.printImportDeclaration","collector.getRequiredProperties","collector.getProperties","collector.getOptionalProperties","_.trim","collector.getType","collector.isActionDescendent","collector.isExported","ts.isInterfaceDeclaration","ts.createTypeReferenceNode","ts.createTypeAliasDeclaration","ts.createToken","ts.SyntaxKind","ts.createUnionTypeNode","ts.createPropertySignature","ts.createTypeLiteralNode","ts.createImportSpecifier","ts.createIdentifier","ts.createImportDeclaration","ts.createImportClause","ts.createNamedImports","ts.createEnumMember","ts.createLiteral","ts.createEnumDeclaration","ts.createShorthandPropertyAssignment","ts.createPropertyAssignment","ts.createPropertyAccess","ts.createReturn","ts.createObjectLiteral","ts.createBlock","ts.createParameter","ts.createFunctionDeclaration","_.flow","_.camelCase","_.upperFirst","_.snakeCase","ts.getCombinedModifierFlags","ts.ModifierFlags","ts.isLiteralTypeNode","ts.isPropertySignature"],"mappings":"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"}