{"version":3,"file":"codegen.es5.js","sources":["../../../modules/codegen/src/codegen.ts","../../../modules/codegen/src/find-files.ts","../../../modules/codegen/src/collect-metadata.ts","../../../modules/codegen/src/printers/type-union-declaration.ts","../../../modules/codegen/src/printers/type-dictionary-declaration.ts","../../../modules/codegen/src/printers/import-declaration.ts","../../../modules/codegen/src/printers/enum-declaration.ts","../../../modules/codegen/src/printers/action-factory-declaration.ts","../../../modules/codegen/src/action-interface.ts","../../../modules/codegen/src/metadata/is-exported.ts","../../../modules/codegen/src/metadata/is-action-descendent.ts","../../../modules/codegen/src/metadata/get-type.ts","../../../modules/codegen/src/metadata/get-required-properties.ts","../../../modules/codegen/src/metadata/get-properties.ts","../../../modules/codegen/src/metadata/get-optional-properties.ts"],"sourcesContent":["import * as fs from 'fs';\nimport * as path from 'path';\nimport * as ts from 'typescript';\nimport { collectMetadata, printActionFactory } from './collect-metadata';\nimport { findFiles } from './find-files';\nconst ora = require('ora');\n\nasync function readFile(file: string): Promise<string> {\n  return new Promise<string>((resolve, reject) => {\n    fs.readFile(file, 'utf8', (error, data) => {\n      if (error) {\n        reject(error);\n      } else {\n        resolve(data);\n      }\n    });\n  });\n}\n\nasync function writeFile(file: string, contents: string): Promise<any> {\n  return new Promise((resolve, reject) => {\n    fs.writeFile(file, contents, { encoding: 'utf8' }, error => {\n      if (error) {\n        reject(error);\n      } else {\n        resolve();\n      }\n    });\n  });\n}\n\nfunction createSourceFile(data: string) {\n  return ts.createSourceFile('', data, ts.ScriptTarget.ES2015, true);\n}\n\nexport async function codegen(glob: string) {\n  const filesIndicator = ora(`Searching for files matching \"${glob}\"`).start();\n  const files = await findFiles(glob);\n  filesIndicator.succeed(`Found ${files.length} files for pattern \"${glob}\"`);\n\n  for (let file of files) {\n    const indicator = ora(file).start();\n\n    try {\n      const parsedPath = path.parse(file);\n      const contents = await readFile(file);\n      const sourceFile = createSourceFile(contents);\n      const ast = collectMetadata(parsedPath.name, sourceFile);\n\n      if (!ast) {\n        throw new Error(`No actions found for file \"${file}\"`);\n      }\n\n      const output = printActionFactory(ast);\n      const target = path.resolve(\n        parsedPath.dir,\n        `./${parsedPath.name}.helpers.ts`\n      );\n      await writeFile(target, output);\n\n      indicator.succeed(`Found ${ast.length} actions in ${file}`);\n    } catch (e) {\n      indicator.fail((e as Error).message);\n    }\n  }\n}\n","import * as path from 'path';\nconst glob = require('glob');\n\nexport function findFiles(globPattern: string): Promise<string[]> {\n  return new Promise((resolve, reject) => {\n    glob(\n      globPattern,\n      { cwd: process.cwd(), ignore: ['**/node_modules/**'] },\n      (error: any, files: string[]) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(files);\n      }\n    );\n  });\n}\n","import * as ts from 'typescript';\nimport * as _ from 'lodash';\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport * as collector from './metadata/index';\nimport * as printers from './printers/index';\nimport { ActionInterface } from './action-interface';\n\nexport interface ActionMetadata {\n  name: string;\n  type: string;\n  properties: { name: string; optional: boolean }[];\n}\n\nexport function collectMetadata(\n  fileName: string,\n  sourceFile: ts.SourceFile\n): ts.Node[] | undefined {\n  const interfaces = sourceFile.statements\n    .filter(ts.isInterfaceDeclaration)\n    .filter(collector.isExported)\n    .filter(collector.isActionDescendent)\n    .filter(m => !!collector.getType(m))\n    .map((enterface): ActionInterface => ({\n      name: enterface.name.getText(),\n      actionType: _.trim(\n        collector.getType(enterface)!.literal.getFullText(),\n        ' \\'\"`'\n      ),\n      properties: [\n        ...collector.getRequiredProperties(collector.getProperties(enterface)),\n        ...collector.getOptionalProperties(collector.getProperties(enterface)),\n      ],\n    }));\n\n  if (interfaces.length === 0) {\n    undefined;\n  }\n\n  return [\n    printers.printImportDeclaration(fileName, interfaces),\n    printers.printEnumDeclaration(interfaces),\n    printers.printTypeUnionDeclaration(interfaces),\n    printers.printTypeDictionaryDeclaration(interfaces),\n    ...interfaces.map(action => printers.printActionFactoryDeclaration(action)),\n  ];\n}\n\nexport function printActionFactory(ast: ts.Node[]) {\n  const resultFile = ts.createSourceFile(\n    '',\n    '',\n    ts.ScriptTarget.ES2015,\n    false,\n    ts.ScriptKind.TS\n  );\n\n  const printer = ts.createPrinter({ newLine: ts.NewLineKind.LineFeed });\n\n  return ast\n    .map(statement =>\n      printer.printNode(ts.EmitHint.Unspecified, statement, resultFile)\n    )\n    .join('\\n\\n');\n}\n","import * as ts from 'typescript';\nimport {\n  ActionInterface,\n  getActionName,\n  getActionUnionName,\n} from '../action-interface';\n\nexport function printTypeUnionDeclaration(actions: ActionInterface[]) {\n  const [firstAction] = actions;\n\n  return ts.createTypeAliasDeclaration(\n    undefined,\n    [ts.createToken(ts.SyntaxKind.ExportKeyword)],\n    getActionUnionName(firstAction),\n    undefined,\n    ts.createUnionTypeNode(\n      actions\n        .map(getActionName)\n        .map(name => ts.createTypeReferenceNode(name, undefined))\n    )\n  );\n}\n","import * as ts from 'typescript';\nimport {\n  ActionInterface,\n  getActionLookupName,\n  getActionType,\n  getActionName,\n} from '../action-interface';\n\nexport function printTypeDictionaryDeclaration(actions: ActionInterface[]) {\n  const [firstAction] = actions;\n\n  return ts.createTypeAliasDeclaration(\n    undefined,\n    [ts.createToken(ts.SyntaxKind.ExportKeyword)],\n    getActionLookupName(firstAction),\n    undefined,\n    ts.createTypeLiteralNode(\n      actions.map(action => {\n        return ts.createPropertySignature(\n          undefined,\n          JSON.stringify(getActionType(action)),\n          undefined,\n          ts.createTypeReferenceNode(getActionName(action), undefined),\n          undefined\n        );\n      })\n    )\n  );\n}\n","import * as ts from 'typescript';\nimport { ActionInterface, getActionName } from '../action-interface';\n\nexport function printImportDeclaration(\n  filename: string,\n  actions: ActionInterface[]\n) {\n  return ts.createImportDeclaration(\n    undefined,\n    undefined,\n    ts.createImportClause(\n      undefined,\n      ts.createNamedImports(\n        actions\n          .map(getActionName)\n          .map(name =>\n            ts.createImportSpecifier(undefined, ts.createIdentifier(name))\n          )\n      )\n    ),\n    ts.createIdentifier(`'./${filename}'`)\n  );\n}\n","import * as ts from 'typescript';\nimport {\n  ActionInterface,\n  getActionEnumName,\n  getActionEnumPropName,\n  getActionType,\n} from '../action-interface';\n\nexport function printEnumDeclaration(actions: ActionInterface[]) {\n  const [firstInterface] = actions;\n\n  return ts.createEnumDeclaration(\n    undefined,\n    [ts.createToken(ts.SyntaxKind.ExportKeyword)],\n    getActionEnumName(firstInterface),\n    actions\n      .map(action => ({\n        prop: getActionEnumPropName(action),\n        value: getActionType(action),\n      }))\n      .map(({ prop, value }) => {\n        return ts.createEnumMember(prop, ts.createLiteral(value));\n      })\n  );\n}\n","import * as ts from 'typescript';\nimport {\n  ActionInterface,\n  getActionFactoryName,\n  getActionName,\n  getActionEnumName,\n  getActionEnumPropName,\n} from '../action-interface';\n\nexport function printActionFactoryDeclaration(action: ActionInterface) {\n  return ts.createFunctionDeclaration(\n    undefined,\n    [ts.createToken(ts.SyntaxKind.ExportKeyword)],\n    undefined,\n    getActionFactoryName(action),\n    undefined,\n    action.properties.map(({ name, required }) => {\n      return ts.createParameter(\n        undefined,\n        undefined,\n        undefined,\n        name,\n        required ? undefined : ts.createToken(ts.SyntaxKind.QuestionToken),\n        ts.createTypeReferenceNode(\n          `${getActionName(action)}[\"${name}\"]`,\n          undefined\n        ),\n        undefined\n      );\n    }),\n    ts.createTypeReferenceNode(getActionName(action), undefined),\n    ts.createBlock(\n      [\n        ts.createReturn(\n          ts.createObjectLiteral([\n            ts.createPropertyAssignment(\n              'type',\n              ts.createPropertyAccess(\n                ts.createIdentifier(getActionEnumName(action)),\n                ts.createIdentifier(getActionEnumPropName(action))\n              )\n            ),\n            ...action.properties.map(({ name }) => {\n              return ts.createShorthandPropertyAssignment(name, undefined);\n            }),\n          ])\n        ),\n      ],\n      true\n    )\n  );\n}\n","import * as _ from 'lodash';\n\nexport interface ActionInterfaceProperty {\n  name: string;\n  required: boolean;\n}\n\nexport interface ActionInterface {\n  name: string;\n  actionType: string;\n  properties: ActionInterfaceProperty[];\n}\n\nconst actionTypeRegex = new RegExp(/\\[(.*?)\\](.*)/);\nfunction parseActionType(type: string) {\n  const result = actionTypeRegex.exec(type);\n\n  if (result === null) {\n    throw new Error(`Could not parse action type \"${type}\"`);\n  }\n\n  return {\n    category: result[1] as string,\n    name: result[2] as string,\n  };\n}\n\nexport const getActionType = (enterface: ActionInterface) =>\n  enterface.actionType;\nexport const getActionName = (enterface: ActionInterface) => enterface.name;\nexport const getActionCategory = _.flow(\n  getActionType,\n  parseActionType,\n  v => v.category\n);\nexport const getActionCategoryToken = _.flow(\n  getActionCategory,\n  _.camelCase,\n  _.upperFirst\n);\nexport const getActionEnumName = _.flow(\n  getActionCategoryToken,\n  v => `${v}ActionType`\n);\nexport const getActionEnumPropName = _.flow(getActionName, _.snakeCase, v =>\n  v.toUpperCase()\n);\nexport const getActionUnionName = _.flow(\n  getActionCategoryToken,\n  v => `${v}Actions`\n);\nexport const getActionLookupName = _.flow(\n  getActionCategoryToken,\n  v => `${v}ActionLookup`\n);\nexport const getActionFactoryName = _.flow(\n  getActionName,\n  _.camelCase,\n  _.upperFirst,\n  v => `create${v}`\n);\n","import * as ts from 'typescript';\n\nfunction hasExportModifier(node: ts.Node): boolean {\n  return (ts.getCombinedModifierFlags(node) & ts.ModifierFlags.Export) !== 0;\n}\n\nfunction isTopLevel(node: ts.Node): boolean {\n  return !!node.parent && node.parent.kind === ts.SyntaxKind.SourceFile;\n}\n\nexport function isExported(node: ts.Node): boolean {\n  return hasExportModifier(node) && isTopLevel(node);\n}\n","import * as ts from 'typescript';\n\nexport function isActionDescendent(\n  statement: ts.InterfaceDeclaration\n): boolean {\n  const heritageClauses = statement.heritageClauses;\n\n  if (heritageClauses) {\n    return heritageClauses.some(clause => {\n      /**\n       * TODO: This breaks if the interface looks like this:\n       * \n       *   interface MyAction extends ngrx.Action { }\n       * \n       */\n      return clause.types.some(type => type.expression.getText() === 'Action');\n    });\n  }\n\n  return false;\n}\n","import * as ts from 'typescript';\nimport { getProperties } from './get-properties';\n\nexport function getType(\n  action: ts.InterfaceDeclaration\n): ts.LiteralTypeNode | undefined {\n  const typeProperty = getProperties(action).find(\n    property => property.name.getText() === 'type'\n  );\n\n  if (!typeProperty) {\n    return undefined;\n  }\n\n  return ts.isLiteralTypeNode(typeProperty.type as any)\n    ? typeProperty.type as any\n    : undefined;\n\n  // return !!typeProperty && ts.isLiteralTypeNode(typeProperty.type) ? typeProperty.type : undefined;\n}\n","import * as ts from 'typescript';\nimport { ActionInterfaceProperty } from '../action-interface';\n\nexport function getRequiredProperties(\n  props: ts.PropertySignature[]\n): ActionInterfaceProperty[] {\n  return props\n    .filter(prop => !prop.questionToken)\n    .map(prop => ({\n      name: prop.name.getText(),\n      required: true,\n    }))\n    .filter(({ name }) => name !== 'type');\n}\n","import * as ts from 'typescript';\n\nexport function getProperties(\n  node: ts.InterfaceDeclaration\n): ts.PropertySignature[] {\n  return node.members.filter(ts.isPropertySignature);\n}\n","import * as ts from 'typescript';\nimport { ActionInterfaceProperty } from '../action-interface';\n\nexport function getOptionalProperties(\n  props: ts.PropertySignature[]\n): ActionInterfaceProperty[] {\n  return props.filter(prop => prop.questionToken).map(prop => ({\n    name: prop.name.getText(),\n    required: false,\n  }));\n}\n"],"names":["writeFile","path.resolve","createSourceFile","readFile","path.parse","ts.createSourceFile","ts.ScriptTarget","resolve","fs.writeFile","fs.readFile","ts.EmitHint","ts.createPrinter","ts.NewLineKind","ts.ScriptKind","printers.printActionFactoryDeclaration","printers.printTypeDictionaryDeclaration","printers.printTypeUnionDeclaration","printers.printEnumDeclaration","printers.printImportDeclaration","collector.getRequiredProperties","collector.getProperties","collector.getOptionalProperties","_.trim","collector.getType","collector.isActionDescendent","collector.isExported","ts.isInterfaceDeclaration","ts.createTypeReferenceNode","ts.createTypeAliasDeclaration","ts.createToken","ts.SyntaxKind","ts.createUnionTypeNode","ts.createPropertySignature","ts.createTypeLiteralNode","ts.createImportSpecifier","ts.createIdentifier","ts.createImportDeclaration","ts.createImportClause","ts.createNamedImports","ts.createEnumMember","ts.createLiteral","ts.createEnumDeclaration","ts.createShorthandPropertyAssignment","ts.createPropertyAssignment","ts.createPropertyAccess","ts.createReturn","ts.createObjectLiteral","ts.createBlock","ts.createParameter","ts.createFunctionDeclaration","_.flow","_.camelCase","_.upperFirst","_.snakeCase","ts.getCombinedModifierFlags","ts.ModifierFlags","ts.isLiteralTypeNode","ts.isPropertySignature"],"mappings":"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"}