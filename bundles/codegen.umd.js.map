{"version":3,"file":"codegen.umd.js","sources":["../../../modules/codegen/src/codegen.ts","../../../modules/codegen/src/find-files.ts","../../../modules/codegen/src/collect-metadata.ts","../../../modules/codegen/src/printers/type-union-declaration.ts","../../../modules/codegen/src/printers/type-dictionary-declaration.ts","../../../modules/codegen/src/printers/import-declaration.ts","../../../modules/codegen/src/printers/enum-declaration.ts","../../../modules/codegen/src/printers/action-factory-declaration.ts","../../../modules/codegen/src/action-interface.ts","../../../modules/codegen/src/metadata/is-exported.ts","../../../modules/codegen/src/metadata/is-action-descendent.ts","../../../modules/codegen/src/metadata/get-type.ts","../../../modules/codegen/src/metadata/get-required-properties.ts","../../../modules/codegen/src/metadata/get-properties.ts","../../../modules/codegen/src/metadata/get-optional-properties.ts"],"sourcesContent":["import * as fs from 'fs';\nimport * as path from 'path';\nimport * as ts from 'typescript';\nimport { collectMetadata, printActionFactory } from './collect-metadata';\nimport { findFiles } from './find-files';\nconst ora = require('ora');\n\nasync function readFile(file: string): Promise<string> {\n  return new Promise<string>((resolve, reject) => {\n    fs.readFile(file, 'utf8', (error, data) => {\n      if (error) {\n        reject(error);\n      } else {\n        resolve(data);\n      }\n    });\n  });\n}\n\nasync function writeFile(file: string, contents: string): Promise<any> {\n  return new Promise((resolve, reject) => {\n    fs.writeFile(file, contents, { encoding: 'utf8' }, error => {\n      if (error) {\n        reject(error);\n      } else {\n        resolve();\n      }\n    });\n  });\n}\n\nfunction createSourceFile(data: string) {\n  return ts.createSourceFile('', data, ts.ScriptTarget.ES2015, true);\n}\n\nexport async function codegen(glob: string) {\n  const filesIndicator = ora(`Searching for files matching \"${glob}\"`).start();\n  const files = await findFiles(glob);\n  filesIndicator.succeed(`Found ${files.length} files for pattern \"${glob}\"`);\n\n  for (let file of files) {\n    const indicator = ora(file).start();\n\n    try {\n      const parsedPath = path.parse(file);\n      const contents = await readFile(file);\n      const sourceFile = createSourceFile(contents);\n      const ast = collectMetadata(parsedPath.name, sourceFile);\n\n      if (!ast) {\n        throw new Error(`No actions found for file \"${file}\"`);\n      }\n\n      const output = printActionFactory(ast);\n      const target = path.resolve(\n        parsedPath.dir,\n        `./${parsedPath.name}.helpers.ts`\n      );\n      await writeFile(target, output);\n\n      indicator.succeed(`Found ${ast.length} actions in ${file}`);\n    } catch (e) {\n      indicator.fail((e as Error).message);\n    }\n  }\n}\n","import * as path from 'path';\nconst glob = require('glob');\n\nexport function findFiles(globPattern: string): Promise<string[]> {\n  return new Promise((resolve, reject) => {\n    glob(\n      globPattern,\n      { cwd: process.cwd(), ignore: ['**/node_modules/**'] },\n      (error: any, files: string[]) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(files);\n      }\n    );\n  });\n}\n","import * as ts from 'typescript';\nimport * as _ from 'lodash';\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport * as collector from './metadata/index';\nimport * as printers from './printers/index';\nimport { ActionInterface } from './action-interface';\n\nexport interface ActionMetadata {\n  name: string;\n  type: string;\n  properties: { name: string; optional: boolean }[];\n}\n\nexport function collectMetadata(\n  fileName: string,\n  sourceFile: ts.SourceFile\n): ts.Node[] | undefined {\n  const interfaces = sourceFile.statements\n    .filter(ts.isInterfaceDeclaration)\n    .filter(collector.isExported)\n    .filter(collector.isActionDescendent)\n    .filter(m => !!collector.getType(m))\n    .map((enterface): ActionInterface => ({\n      name: enterface.name.getText(),\n      actionType: _.trim(\n        collector.getType(enterface)!.literal.getFullText(),\n        ' \\'\"`'\n      ),\n      properties: [\n        ...collector.getRequiredProperties(collector.getProperties(enterface)),\n        ...collector.getOptionalProperties(collector.getProperties(enterface)),\n      ],\n    }));\n\n  if (interfaces.length === 0) {\n    undefined;\n  }\n\n  return [\n    printers.printImportDeclaration(fileName, interfaces),\n    printers.printEnumDeclaration(interfaces),\n    printers.printTypeUnionDeclaration(interfaces),\n    printers.printTypeDictionaryDeclaration(interfaces),\n    ...interfaces.map(action => printers.printActionFactoryDeclaration(action)),\n  ];\n}\n\nexport function printActionFactory(ast: ts.Node[]) {\n  const resultFile = ts.createSourceFile(\n    '',\n    '',\n    ts.ScriptTarget.ES2015,\n    false,\n    ts.ScriptKind.TS\n  );\n\n  const printer = ts.createPrinter({ newLine: ts.NewLineKind.LineFeed });\n\n  return ast\n    .map(statement =>\n      printer.printNode(ts.EmitHint.Unspecified, statement, resultFile)\n    )\n    .join('\\n\\n');\n}\n","import * as ts from 'typescript';\nimport {\n  ActionInterface,\n  getActionName,\n  getActionUnionName,\n} from '../action-interface';\n\nexport function printTypeUnionDeclaration(actions: ActionInterface[]) {\n  const [firstAction] = actions;\n\n  return ts.createTypeAliasDeclaration(\n    undefined,\n    [ts.createToken(ts.SyntaxKind.ExportKeyword)],\n    getActionUnionName(firstAction),\n    undefined,\n    ts.createUnionTypeNode(\n      actions\n        .map(getActionName)\n        .map(name => ts.createTypeReferenceNode(name, undefined))\n    )\n  );\n}\n","import * as ts from 'typescript';\nimport {\n  ActionInterface,\n  getActionLookupName,\n  getActionType,\n  getActionName,\n} from '../action-interface';\n\nexport function printTypeDictionaryDeclaration(actions: ActionInterface[]) {\n  const [firstAction] = actions;\n\n  return ts.createTypeAliasDeclaration(\n    undefined,\n    [ts.createToken(ts.SyntaxKind.ExportKeyword)],\n    getActionLookupName(firstAction),\n    undefined,\n    ts.createTypeLiteralNode(\n      actions.map(action => {\n        return ts.createPropertySignature(\n          undefined,\n          JSON.stringify(getActionType(action)),\n          undefined,\n          ts.createTypeReferenceNode(getActionName(action), undefined),\n          undefined\n        );\n      })\n    )\n  );\n}\n","import * as ts from 'typescript';\nimport { ActionInterface, getActionName } from '../action-interface';\n\nexport function printImportDeclaration(\n  filename: string,\n  actions: ActionInterface[]\n) {\n  return ts.createImportDeclaration(\n    undefined,\n    undefined,\n    ts.createImportClause(\n      undefined,\n      ts.createNamedImports(\n        actions\n          .map(getActionName)\n          .map(name =>\n            ts.createImportSpecifier(undefined, ts.createIdentifier(name))\n          )\n      )\n    ),\n    ts.createIdentifier(`'./${filename}'`)\n  );\n}\n","import * as ts from 'typescript';\nimport {\n  ActionInterface,\n  getActionEnumName,\n  getActionEnumPropName,\n  getActionType,\n} from '../action-interface';\n\nexport function printEnumDeclaration(actions: ActionInterface[]) {\n  const [firstInterface] = actions;\n\n  return ts.createEnumDeclaration(\n    undefined,\n    [ts.createToken(ts.SyntaxKind.ExportKeyword)],\n    getActionEnumName(firstInterface),\n    actions\n      .map(action => ({\n        prop: getActionEnumPropName(action),\n        value: getActionType(action),\n      }))\n      .map(({ prop, value }) => {\n        return ts.createEnumMember(prop, ts.createLiteral(value));\n      })\n  );\n}\n","import * as ts from 'typescript';\nimport {\n  ActionInterface,\n  getActionFactoryName,\n  getActionName,\n  getActionEnumName,\n  getActionEnumPropName,\n} from '../action-interface';\n\nexport function printActionFactoryDeclaration(action: ActionInterface) {\n  return ts.createFunctionDeclaration(\n    undefined,\n    [ts.createToken(ts.SyntaxKind.ExportKeyword)],\n    undefined,\n    getActionFactoryName(action),\n    undefined,\n    action.properties.map(({ name, required }) => {\n      return ts.createParameter(\n        undefined,\n        undefined,\n        undefined,\n        name,\n        required ? undefined : ts.createToken(ts.SyntaxKind.QuestionToken),\n        ts.createTypeReferenceNode(\n          `${getActionName(action)}[\"${name}\"]`,\n          undefined\n        ),\n        undefined\n      );\n    }),\n    ts.createTypeReferenceNode(getActionName(action), undefined),\n    ts.createBlock(\n      [\n        ts.createReturn(\n          ts.createObjectLiteral([\n            ts.createPropertyAssignment(\n              'type',\n              ts.createPropertyAccess(\n                ts.createIdentifier(getActionEnumName(action)),\n                ts.createIdentifier(getActionEnumPropName(action))\n              )\n            ),\n            ...action.properties.map(({ name }) => {\n              return ts.createShorthandPropertyAssignment(name, undefined);\n            }),\n          ])\n        ),\n      ],\n      true\n    )\n  );\n}\n","import * as _ from 'lodash';\n\nexport interface ActionInterfaceProperty {\n  name: string;\n  required: boolean;\n}\n\nexport interface ActionInterface {\n  name: string;\n  actionType: string;\n  properties: ActionInterfaceProperty[];\n}\n\nconst actionTypeRegex = new RegExp(/\\[(.*?)\\](.*)/);\nfunction parseActionType(type: string) {\n  const result = actionTypeRegex.exec(type);\n\n  if (result === null) {\n    throw new Error(`Could not parse action type \"${type}\"`);\n  }\n\n  return {\n    category: result[1] as string,\n    name: result[2] as string,\n  };\n}\n\nexport const getActionType = (enterface: ActionInterface) =>\n  enterface.actionType;\nexport const getActionName = (enterface: ActionInterface) => enterface.name;\nexport const getActionCategory = _.flow(\n  getActionType,\n  parseActionType,\n  v => v.category\n);\nexport const getActionCategoryToken = _.flow(\n  getActionCategory,\n  _.camelCase,\n  _.upperFirst\n);\nexport const getActionEnumName = _.flow(\n  getActionCategoryToken,\n  v => `${v}ActionType`\n);\nexport const getActionEnumPropName = _.flow(getActionName, _.snakeCase, v =>\n  v.toUpperCase()\n);\nexport const getActionUnionName = _.flow(\n  getActionCategoryToken,\n  v => `${v}Actions`\n);\nexport const getActionLookupName = _.flow(\n  getActionCategoryToken,\n  v => `${v}ActionLookup`\n);\nexport const getActionFactoryName = _.flow(\n  getActionName,\n  _.camelCase,\n  _.upperFirst,\n  v => `create${v}`\n);\n","import * as ts from 'typescript';\n\nfunction hasExportModifier(node: ts.Node): boolean {\n  return (ts.getCombinedModifierFlags(node) & ts.ModifierFlags.Export) !== 0;\n}\n\nfunction isTopLevel(node: ts.Node): boolean {\n  return !!node.parent && node.parent.kind === ts.SyntaxKind.SourceFile;\n}\n\nexport function isExported(node: ts.Node): boolean {\n  return hasExportModifier(node) && isTopLevel(node);\n}\n","import * as ts from 'typescript';\n\nexport function isActionDescendent(\n  statement: ts.InterfaceDeclaration\n): boolean {\n  const heritageClauses = statement.heritageClauses;\n\n  if (heritageClauses) {\n    return heritageClauses.some(clause => {\n      /**\n       * TODO: This breaks if the interface looks like this:\n       * \n       *   interface MyAction extends ngrx.Action { }\n       * \n       */\n      return clause.types.some(type => type.expression.getText() === 'Action');\n    });\n  }\n\n  return false;\n}\n","import * as ts from 'typescript';\nimport { getProperties } from './get-properties';\n\nexport function getType(\n  action: ts.InterfaceDeclaration\n): ts.LiteralTypeNode | undefined {\n  const typeProperty = getProperties(action).find(\n    property => property.name.getText() === 'type'\n  );\n\n  if (!typeProperty) {\n    return undefined;\n  }\n\n  return ts.isLiteralTypeNode(typeProperty.type as any)\n    ? typeProperty.type as any\n    : undefined;\n\n  // return !!typeProperty && ts.isLiteralTypeNode(typeProperty.type) ? typeProperty.type : undefined;\n}\n","import * as ts from 'typescript';\nimport { ActionInterfaceProperty } from '../action-interface';\n\nexport function getRequiredProperties(\n  props: ts.PropertySignature[]\n): ActionInterfaceProperty[] {\n  return props\n    .filter(prop => !prop.questionToken)\n    .map(prop => ({\n      name: prop.name.getText(),\n      required: true,\n    }))\n    .filter(({ name }) => name !== 'type');\n}\n","import * as ts from 'typescript';\n\nexport function getProperties(\n  node: ts.InterfaceDeclaration\n): ts.PropertySignature[] {\n  return node.members.filter(ts.isPropertySignature);\n}\n","import * as ts from 'typescript';\nimport { ActionInterfaceProperty } from '../action-interface';\n\nexport function getOptionalProperties(\n  props: ts.PropertySignature[]\n): ActionInterfaceProperty[] {\n  return props.filter(prop => prop.questionToken).map(prop => ({\n    name: prop.name.getText(),\n    required: false,\n  }));\n}\n"],"names":["writeFile","path.resolve","createSourceFile","readFile","path.parse","ts.createSourceFile","ts.ScriptTarget","resolve","fs.writeFile","fs.readFile","ts.EmitHint","ts.createPrinter","ts.NewLineKind","ts.ScriptKind","printers.printActionFactoryDeclaration","printers.printTypeDictionaryDeclaration","printers.printTypeUnionDeclaration","printers.printEnumDeclaration","printers.printImportDeclaration","collector.getRequiredProperties","collector.getProperties","collector.getOptionalProperties","_.trim","collector.getType","collector.isActionDescendent","collector.isExported","ts.isInterfaceDeclaration","ts.createTypeReferenceNode","ts.createTypeAliasDeclaration","ts.createToken","ts.SyntaxKind","ts.createUnionTypeNode","ts.createPropertySignature","ts.createTypeLiteralNode","ts.createImportSpecifier","ts.createIdentifier","ts.createImportDeclaration","ts.createImportClause","ts.createNamedImports","ts.createEnumMember","ts.createLiteral","ts.createEnumDeclaration","ts.createShorthandPropertyAssignment","ts.createPropertyAssignment","ts.createPropertyAccess","ts.createReturn","ts.createObjectLiteral","ts.createBlock","ts.createParameter","ts.createFunctionDeclaration","_.flow","_.camelCase","_.upperFirst","_.snakeCase","ts.getCombinedModifierFlags","ts.ModifierFlags","ts.isLiteralTypeNode","ts.isPropertySignature"],"mappings":"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"}