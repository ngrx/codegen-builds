{"version":3,"file":"codegen.umd.js","sources":["../../../modules/codegen/src/codegen.ts","../../../modules/codegen/src/find-files.ts","../../../modules/codegen/src/collect-metadata.ts","../../../modules/codegen/src/printers/type-union-declaration.ts","../../../modules/codegen/src/printers/type-dictionary-declaration.ts","../../../modules/codegen/src/printers/import-declaration.ts","../../../modules/codegen/src/printers/enum-declaration.ts","../../../modules/codegen/src/printers/action-factory-declaration.ts","../../../modules/codegen/src/action-interface.ts","../../../modules/codegen/src/metadata/is-exported.ts","../../../modules/codegen/src/metadata/is-action-descendent.ts","../../../modules/codegen/src/metadata/get-type.ts","../../../modules/codegen/src/metadata/get-required-properties.ts","../../../modules/codegen/src/metadata/get-properties.ts","../../../modules/codegen/src/metadata/get-optional-properties.ts"],"sourcesContent":["import * as fs from 'fs';\nimport * as path from 'path';\nimport * as ts from 'typescript';\nimport { collectMetadata, printActionFactory } from './collect-metadata';\nimport { findFiles } from './find-files';\nconst /** @type {?} */ ora = require('ora');\n/**\n * @param {?} file\n * @return {?}\n */\nasync function readFile(file: string): Promise<string> {\n  return new Promise<string>((resolve, reject) => {\n    fs.readFile(file, 'utf8', (error, data) => {\n      if (error) {\n        reject(error);\n      } else {\n        resolve(data);\n      }\n    });\n  });\n}\n/**\n * @param {?} file\n * @param {?} contents\n * @return {?}\n */\nasync function writeFile(file: string, contents: string): Promise<any> {\n  return new Promise((resolve, reject) => {\n    fs.writeFile(file, contents, { encoding: 'utf8' }, error => {\n      if (error) {\n        reject(error);\n      } else {\n        resolve();\n      }\n    });\n  });\n}\n/**\n * @param {?} data\n * @return {?}\n */\nfunction createSourceFile(data: string) {\n  return ts.createSourceFile('', data, ts.ScriptTarget.ES2015, true);\n}\n/**\n * @param {?} glob\n * @return {?}\n */\nexport async function codegen(glob: string) {\n  const /** @type {?} */ filesIndicator = ora(`Searching for files matching \"${glob}\"`).start();\n  const /** @type {?} */ files = await findFiles(glob);\n  filesIndicator.succeed(`Found ${files.length} files for pattern \"${glob}\"`);\n\n  for (let /** @type {?} */ file of files) {\n    const /** @type {?} */ indicator = ora(file).start();\n\n    try {\n      const /** @type {?} */ parsedPath = path.parse(file);\n      const /** @type {?} */ contents = await readFile(file);\n      const /** @type {?} */ sourceFile = createSourceFile(contents);\n      const /** @type {?} */ ast = collectMetadata(parsedPath.name, sourceFile);\n\n      if (!ast) {\n        throw new Error(`No actions found for file \"${file}\"`);\n      }\n\n      const /** @type {?} */ output = printActionFactory(ast);\n      const /** @type {?} */ target = path.resolve(\n        parsedPath.dir,\n        `./${parsedPath.name}.helpers.ts`\n      );\n      await writeFile(target, output);\n\n      indicator.succeed(`Found ${ast.length} actions in ${file}`);\n    } catch ( /** @type {?} */e) {\n      indicator.fail(( /** @type {?} */((e as Error))).message);\n    }\n  }\n}\n","import * as path from 'path';\nconst /** @type {?} */ glob = require('glob');\n/**\n * @param {?} globPattern\n * @return {?}\n */\nexport function findFiles(globPattern: string): Promise<string[]> {\n  return new Promise((resolve, reject) => {\n    glob(\n      globPattern,\n      { cwd: process.cwd(), ignore: ['**/node_modules/**'] },\n      (error: any, files: string[]) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(files);\n      }\n    );\n  });\n}\n","import * as ts from 'typescript';\nimport * as _ from 'lodash';\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport * as collector from './metadata/index';\nimport * as printers from './printers/index';\nimport { ActionInterface } from './action-interface';\n\nexport interface ActionMetadata {\n  name: string;\n  type: string;\n  properties: { name: string; optional: boolean }[];\n}\n/**\n * @param {?} fileName\n * @param {?} sourceFile\n * @return {?}\n */\nexport function collectMetadata(\n  fileName: string,\n  sourceFile: ts.SourceFile\n): ts.Node[] | undefined {\n  const /** @type {?} */ interfaces = sourceFile.statements\n    .filter(ts.isInterfaceDeclaration)\n    .filter(collector.isExported)\n    .filter(collector.isActionDescendent)\n    .filter(m => !!collector.getType(m))\n    .map((enterface): ActionInterface => ({\n      name: enterface.name.getText(),\n      actionType: _.trim( /** @type {?} */((\n        collector.getType(enterface))).literal.getFullText(),\n        ' \\'\"`'\n      ),\n      properties: [\n        ...collector.getRequiredProperties(collector.getProperties(enterface)),\n        ...collector.getOptionalProperties(collector.getProperties(enterface)),\n      ],\n    }));\n\n  if (interfaces.length === 0) {\n    undefined;\n  }\n\n  return [\n    printers.printImportDeclaration(fileName, interfaces),\n    printers.printEnumDeclaration(interfaces),\n    printers.printTypeUnionDeclaration(interfaces),\n    printers.printTypeDictionaryDeclaration(interfaces),\n    ...interfaces.map(action => printers.printActionFactoryDeclaration(action)),\n  ];\n}\n/**\n * @param {?} ast\n * @return {?}\n */\nexport function printActionFactory(ast: ts.Node[]) {\n  const /** @type {?} */ resultFile = ts.createSourceFile(\n    '',\n    '',\n    ts.ScriptTarget.ES2015,\n    false,\n    ts.ScriptKind.TS\n  );\n\n  const /** @type {?} */ printer = ts.createPrinter({ newLine: ts.NewLineKind.LineFeed });\n\n  return ast\n    .map(statement =>\n      printer.printNode(ts.EmitHint.Unspecified, statement, resultFile)\n    )\n    .join('\\n\\n');\n}\n","import * as ts from 'typescript';\nimport {\n  ActionInterface,\n  getActionName,\n  getActionUnionName,\n} from '../action-interface';\n/**\n * @param {?} actions\n * @return {?}\n */\nexport function printTypeUnionDeclaration(actions: ActionInterface[]) {\n  const [firstAction] = actions;\n\n  return ts.createTypeAliasDeclaration(\n    undefined,\n    [ts.createToken(ts.SyntaxKind.ExportKeyword)],\n    getActionUnionName(firstAction),\n    undefined,\n    ts.createUnionTypeNode(\n      actions\n        .map(getActionName)\n        .map(name => ts.createTypeReferenceNode(name, undefined))\n    )\n  );\n}\n","import * as ts from 'typescript';\nimport {\n  ActionInterface,\n  getActionLookupName,\n  getActionType,\n  getActionName,\n} from '../action-interface';\n/**\n * @param {?} actions\n * @return {?}\n */\nexport function printTypeDictionaryDeclaration(actions: ActionInterface[]) {\n  const [firstAction] = actions;\n\n  return ts.createTypeAliasDeclaration(\n    undefined,\n    [ts.createToken(ts.SyntaxKind.ExportKeyword)],\n    getActionLookupName(firstAction),\n    undefined,\n    ts.createTypeLiteralNode(\n      actions.map(action => {\n        return ts.createPropertySignature(\n          undefined,\n          JSON.stringify(getActionType(action)),\n          undefined,\n          ts.createTypeReferenceNode(getActionName(action), undefined),\n          undefined\n        );\n      })\n    )\n  );\n}\n","import * as ts from 'typescript';\nimport { ActionInterface, getActionName } from '../action-interface';\n/**\n * @param {?} filename\n * @param {?} actions\n * @return {?}\n */\nexport function printImportDeclaration(\n  filename: string,\n  actions: ActionInterface[]\n) {\n  return ts.createImportDeclaration(\n    undefined,\n    undefined,\n    ts.createImportClause(\n      undefined,\n      ts.createNamedImports(\n        actions\n          .map(getActionName)\n          .map(name =>\n            ts.createImportSpecifier(undefined, ts.createIdentifier(name))\n          )\n      )\n    ),\n    ts.createIdentifier(`'./${filename}'`)\n  );\n}\n","import * as ts from 'typescript';\nimport {\n  ActionInterface,\n  getActionEnumName,\n  getActionEnumPropName,\n  getActionType,\n} from '../action-interface';\n/**\n * @param {?} actions\n * @return {?}\n */\nexport function printEnumDeclaration(actions: ActionInterface[]) {\n  const [firstInterface] = actions;\n\n  return ts.createEnumDeclaration(\n    undefined,\n    [ts.createToken(ts.SyntaxKind.ExportKeyword)],\n    getActionEnumName(firstInterface),\n    actions\n      .map(action => ({\n        prop: getActionEnumPropName(action),\n        value: getActionType(action),\n      }))\n      .map(({ prop, value }) => {\n        return ts.createEnumMember(prop, ts.createLiteral(value));\n      })\n  );\n}\n","import * as ts from 'typescript';\nimport {\n  ActionInterface,\n  getActionFactoryName,\n  getActionName,\n  getActionEnumName,\n  getActionEnumPropName,\n} from '../action-interface';\n/**\n * @param {?} action\n * @return {?}\n */\nexport function printActionFactoryDeclaration(action: ActionInterface) {\n  return ts.createFunctionDeclaration(\n    undefined,\n    [ts.createToken(ts.SyntaxKind.ExportKeyword)],\n    undefined,\n    getActionFactoryName(action),\n    undefined,\n    action.properties.map(({ name, required }) => {\n      return ts.createParameter(\n        undefined,\n        undefined,\n        undefined,\n        name,\n        required ? undefined : ts.createToken(ts.SyntaxKind.QuestionToken),\n        ts.createTypeReferenceNode(\n          `${getActionName(action)}[\"${name}\"]`,\n          undefined\n        ),\n        undefined\n      );\n    }),\n    ts.createTypeReferenceNode(getActionName(action), undefined),\n    ts.createBlock(\n      [\n        ts.createReturn(\n          ts.createObjectLiteral([\n            ts.createPropertyAssignment(\n              'type',\n              ts.createPropertyAccess(\n                ts.createIdentifier(getActionEnumName(action)),\n                ts.createIdentifier(getActionEnumPropName(action))\n              )\n            ),\n            ...action.properties.map(({ name }) => {\n              return ts.createShorthandPropertyAssignment(name, undefined);\n            }),\n          ])\n        ),\n      ],\n      true\n    )\n  );\n}\n","import * as _ from 'lodash';\n\nexport interface ActionInterfaceProperty {\n  name: string;\n  required: boolean;\n}\n\nexport interface ActionInterface {\n  name: string;\n  actionType: string;\n  properties: ActionInterfaceProperty[];\n}\n\nconst /** @type {?} */ actionTypeRegex = new RegExp(/\\[(.*?)\\](.*)/);\n/**\n * @param {?} type\n * @return {?}\n */\nfunction parseActionType(type: string) {\n  const /** @type {?} */ result = actionTypeRegex.exec(type);\n\n  if (result === null) {\n    throw new Error(`Could not parse action type \"${type}\"`);\n  }\n\n  return {\n    category: /** @type {?} */(( result[1] as string)),\n    name: /** @type {?} */(( result[2] as string)),\n  };\n}\n\nexport const /** @type {?} */ getActionType = (enterface: ActionInterface) =>\n  enterface.actionType;\nexport const /** @type {?} */ getActionName = (enterface: ActionInterface) => enterface.name;\nexport const /** @type {?} */ getActionCategory = _.flow(\n  getActionType,\n  parseActionType,\n  v => v.category\n);\nexport const /** @type {?} */ getActionCategoryToken = _.flow(\n  getActionCategory,\n  _.camelCase,\n  _.upperFirst\n);\nexport const /** @type {?} */ getActionEnumName = _.flow(\n  getActionCategoryToken,\n  v => `${v}ActionType`\n);\nexport const /** @type {?} */ getActionEnumPropName = _.flow(getActionName, _.snakeCase, v =>\n  v.toUpperCase()\n);\nexport const /** @type {?} */ getActionUnionName = _.flow(\n  getActionCategoryToken,\n  v => `${v}Actions`\n);\nexport const /** @type {?} */ getActionLookupName = _.flow(\n  getActionCategoryToken,\n  v => `${v}ActionLookup`\n);\nexport const /** @type {?} */ getActionFactoryName = _.flow(\n  getActionName,\n  _.camelCase,\n  _.upperFirst,\n  v => `create${v}`\n);\n","import * as ts from 'typescript';\n/**\n * @param {?} node\n * @return {?}\n */\nfunction hasExportModifier(node: ts.Node): boolean {\n  return (ts.getCombinedModifierFlags(node) & ts.ModifierFlags.Export) !== 0;\n}\n/**\n * @param {?} node\n * @return {?}\n */\nfunction isTopLevel(node: ts.Node): boolean {\n  return !!node.parent && node.parent.kind === ts.SyntaxKind.SourceFile;\n}\n/**\n * @param {?} node\n * @return {?}\n */\nexport function isExported(node: ts.Node): boolean {\n  return hasExportModifier(node) && isTopLevel(node);\n}\n","import * as ts from 'typescript';\n/**\n * @param {?} statement\n * @return {?}\n */\nexport function isActionDescendent(\n  statement: ts.InterfaceDeclaration\n): boolean {\n  const /** @type {?} */ heritageClauses = statement.heritageClauses;\n\n  if (heritageClauses) {\n    return heritageClauses.some(clause => {\n      /**\n       * TODO: This breaks if the interface looks like this:\n       * \n       *   interface MyAction extends ngrx.Action { }\n       * \n       */\n      return clause.types.some(type => type.expression.getText() === 'Action');\n    });\n  }\n\n  return false;\n}\n","import * as ts from 'typescript';\nimport { getProperties } from './get-properties';\n/**\n * @param {?} action\n * @return {?}\n */\nexport function getType(\n  action: ts.InterfaceDeclaration\n): ts.LiteralTypeNode | undefined {\n  const /** @type {?} */ typeProperty = getProperties(action).find(\n    property => property.name.getText() === 'type'\n  );\n\n  if (!typeProperty) {\n    return undefined;\n  }\n\n  return ts.isLiteralTypeNode( /** @type {?} */((typeProperty.type as any)))\n    ? /** @type {?} */(( typeProperty.type as any))\n    : undefined;\n\n  // return !!typeProperty && ts.isLiteralTypeNode(typeProperty.type) ? typeProperty.type : undefined;\n}\n","import * as ts from 'typescript';\nimport { ActionInterfaceProperty } from '../action-interface';\n/**\n * @param {?} props\n * @return {?}\n */\nexport function getRequiredProperties(\n  props: ts.PropertySignature[]\n): ActionInterfaceProperty[] {\n  return props\n    .filter(prop => !prop.questionToken)\n    .map(prop => ({\n      name: prop.name.getText(),\n      required: true,\n    }))\n    .filter(({ name }) => name !== 'type');\n}\n","import * as ts from 'typescript';\n/**\n * @param {?} node\n * @return {?}\n */\nexport function getProperties(\n  node: ts.InterfaceDeclaration\n): ts.PropertySignature[] {\n  return node.members.filter(ts.isPropertySignature);\n}\n","import * as ts from 'typescript';\nimport { ActionInterfaceProperty } from '../action-interface';\n/**\n * @param {?} props\n * @return {?}\n */\nexport function getOptionalProperties(\n  props: ts.PropertySignature[]\n): ActionInterfaceProperty[] {\n  return props.filter(prop => prop.questionToken).map(prop => ({\n    name: prop.name.getText(),\n    required: false,\n  }));\n}\n"],"names":["writeFile","path.resolve","createSourceFile","readFile","path.parse","ts.createSourceFile","ts.ScriptTarget","resolve","fs.writeFile","fs.readFile","ts.EmitHint","ts.createPrinter","ts.NewLineKind","ts.ScriptKind","printers.printActionFactoryDeclaration","printers.printTypeDictionaryDeclaration","printers.printTypeUnionDeclaration","printers.printEnumDeclaration","printers.printImportDeclaration","collector.getRequiredProperties","collector.getProperties","collector.getOptionalProperties","_.trim","collector.getType","collector.isActionDescendent","collector.isExported","ts.isInterfaceDeclaration","ts.createTypeReferenceNode","ts.createTypeAliasDeclaration","ts.createToken","ts.SyntaxKind","ts.createUnionTypeNode","ts.createPropertySignature","ts.createTypeLiteralNode","ts.createImportSpecifier","ts.createIdentifier","ts.createImportDeclaration","ts.createImportClause","ts.createNamedImports","ts.createEnumMember","ts.createLiteral","ts.createEnumDeclaration","ts.createShorthandPropertyAssignment","ts.createPropertyAssignment","ts.createPropertyAccess","ts.createReturn","ts.createObjectLiteral","ts.createBlock","ts.createParameter","ts.createFunctionDeclaration","_.flow","_.camelCase","_.upperFirst","_.snakeCase","ts.getCombinedModifierFlags","ts.ModifierFlags","ts.isLiteralTypeNode","ts.isPropertySignature"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AcEA;;;;AAIA,SAAA,qBAAA,CACE,KAA6B,EAD/B;IAGE,OAHO,KAAA,CAAM,MAAC,CAAM,UAAA,IAAC,EAGvB,EAH8B,OAAA,IAAA,CAAK,aAAC,CAGpC,EAHoC,CAAa,CAAC,GAAC,CAAG,UAAA,IAAC,EAGvD,EAAA,QAH8D;QAI1D,IAAI,EAHE,IAAA,CAAK,IAAC,CAAI,OAAC,EAAO;QAIxB,QAAQ,EAHE,KAAA;KAIX,EAAH,EAHI,CAAC,CAAC;CAIL;;;;;ADRD,SAAA,aAAA,CACE,IAA6B,EAD/B;IAGE,OAHO,IAAA,CAAK,OAAC,CAAO,MAAC,CAAMyD,8BAAI,CAAmB,CAAC;CAIpD;;;;;ADHD,SAAA,qBAAA,CACE,KAA6B,EAD/B;IAGE,OAHO,KAAA;SAIJ,MAHC,CAAM,UAAA,IAAC,EAGb,EAHoB,OAAA,CAAA,IAAE,CAAI,aAAC,CAG3B,EAH2B,CAAa;SAInC,GAHC,CAAG,UAAA,IAAC,EAGV,EAAA,QAHiB;QAIX,IAAI,EAHE,IAAA,CAAK,IAAC,CAAI,OAAC,EAAO;QAIxB,QAAQ,EAHE,IAAA;KAIX,EAAL,EAHM,CAAC;SAIF,MAHC,CAAM,UAAC,EAAO,EAGpB;QAHA,IAAe,IAAf,GAAA,EAAA,CAAA,IAAe,CAAf;QAA0B,OAAA,IAAA,KAAS,MAAA,CAAnC;KAAmC,CAAO,CAAC;CAI1C;;;;;ADVD,SAAA,OAAA,CACE,MAA+B,EADjC;IAGE,qBAHM,YAAA,GAAe,aAAA,CAAc,MAAC,CAAM,CAAC,IAAC,CAI1C,UAAA,QAAQ,EADZ,EAFgB,OAAA,QAAA,CAAS,IAAC,CAAI,OAAC,EAAO,KAAM,MAAA,CAE5C,EAF4C,CAIzC,CAHC;IAKF,IAAI,CAHC,YAAC,EAAa;QAIjB,OAHO,SAAA,CAAU;KAIlB;IAED,OAHOD,4BAAI,mBAAiB,YAAC,CAAY,IAAQ,EAAI;WACjD,YAAA,CAAa,IAAQ;UACrB,SAAA,CAAU;;CAMf;;;;;ADjBD,SAAA,kBAAA,CACE,SAAkC,EADpC;IAGE,qBAHM,eAAA,GAAkB,SAAA,CAAU,eAAC,CAAe;IAKlD,IAAI,eAHC,EAAgB;QAInB,OAHO,eAAA,CAAgB,IAAC,CAAI,UAAA,MAAC,EAGjC;;;;;;;YAOM,OAHO,MAAA,CAAO,KAAC,CAAK,IAAC,CAAI,UAAA,IAAC,EAGhC,EAHuC,OAAA,IAAA,CAAK,UAAC,CAAU,OAAC,EAAO,KAAM,QAAA,CAGrE,EAHqE,CAAS,CAAC;SAI1E,CAHC,CAAC;KAIJ;IAED,OAHO,KAAA,CAAM;CAId;;;;;ADlBD,SAAA,iBAAA,CAHC,IAAA,EAGD;IACE,OAHO,CAAAF,mCAAK,CAAwB,IAAC,CAAI,GAAGC,wBAAI,CAAa,MAAC,MAAW,CAAA,CAAE;CAI5E;;;;;AAKD,SAAA,UAAA,CANC,IAAA,EAMD;IACE,OANO,CAAA,CAAE,IAAC,CAAI,MAAC,IAAS,IAAA,CAAK,MAAC,CAAM,IAAC,KAAQzB,qBAAI,CAAU,UAAC,CAAU;CAOvE;;;;;AAKD,SAAA,UAAA,CATC,IAAA,EASD;IACE,OATO,iBAAA,CAAkB,IAAC,CAAI,IAAI,UAAA,CAAW,IAAC,CAAI,CAAC;CAUpD;ADRD,IAAM,eAAA,GAAkB,IAAI,MAAA,CAAO,eAAC,CAAe,CAAC;;;;;AAKpD,SAAA,eAAA,CAJC,IAAA,EAID;IACE,qBAJM,MAAA,GAAS,eAAA,CAAgB,IAAC,CAAI,IAAC,CAAI,CAAC;IAM1C,IAAI,MAJC,KAAU,IAAA,EAAM;QAKnB,MAJM,IAAI,KAAA,CAAM,gCAIpB,GAJqB,IAAgC,GAIrD,IAJyD,CAAG,CAAC;KAK1D;IAED,OAJO;QAKL,QAAQ,oBAJE,MAAA,CAAO,CAAC,CAAK,CAAA;QAKvB,IAAI,oBAJE,MAAA,CAAO,CAAC,CAAK,CAAA;KAKpB,CAJC;CAKH;AAED,IAJa,aAAA,GAAgB,UAAA,SAAY,EAIzC,EACE,OAAA,SAAS,CAJC,UAAC,CAGb,EAHa,CAAU;AAKvB,IAJa,aAAA,GAAgB,UAAA,SAAY,EAIzC,EAJ6D,OAAA,SAAA,CAAU,IAAC,CAIxE,EAJwE,CAAI;AAK5E,IAJa,iBAAA,GAAoBoB,WAAG,CAKlC,aAAa,EACb,eAAe,EACf,UAAA,CAAC,EAHH,EADO,OAAA,CAAA,CAAE,QAAC,CACV,EADU,CAKT,CAJC;AAKF,IAJa,sBAAA,GAAyBA,WAAG,CAKvC,iBAAiB,EACjBC,gBAJG,EAKHC,iBAJG,CAKJ,CAJC;AAKF,IAJa,iBAAA,GAAoBF,WAAG,CAKlC,sBAAsB,EACtB,UAAA,CAAC,EAFH,EAFO,OAAA,CAAI,GAEX,YAFY,CAEZ,EAFY,CAKX,CAJC;AAKF,IAJa,qBAAA,GAAwBA,WAAG,CAAI,aAAC,EAAcG,gBAAG,EAAU,UAAA,CAAA,EAIxE,EACE,OAAA,CAAC,CAJC,WAAC,EAAW,CAGhB,EAHgB,CAKf,CAJC;AAKF,IAJa,kBAAA,GAAqBH,WAAG,CAKnC,sBAAsB,EACtB,UAAA,CAAC,EAFH,EAFO,OAAA,CAAI,GAEX,SAFY,CAEZ,EAFY,CAKX,CAJC;AAKF,IAJa,mBAAA,GAAsBA,WAAG,CAKpC,sBAAsB,EACtB,UAAA,CAAC,EAFH,EAFO,OAAA,CAAI,GAEX,cAFY,CAEZ,EAFY,CAKX,CAJC;AAKF,IAJa,oBAAA,GAAuBA,WAAG,CAKrC,aAAa,EACbC,gBAJG,EAKHC,iBAJG,EAKH,UAAA,CAAC,EAJH,EAAO,OAAA,QAAP,GAAO,CAAW,CAAlB,EAAkB,CAKjB,CALD;;;;;AD/CA,SAAA,6BAAA,CAHC,MAAA,EAGD;IACE,OAHOH,oCAAI,CAIT,SAAS,EACT,CAACpB,sBAHI,CAAWC,qBAAI,CAAU,aAAC,CAAa,CAAC,EAI7C,SAAS,EACT,oBAAoB,CAHC,MAAC,CAAM,EAI5B,SAAS,EACT,MAAM,CAHC,UAAC,CAAU,GAAC,CAAG,UAAC,EAAiB,EAH5C;QAGA,IAA6B,IAA7B,GAAA,EAAA,CAAA,IAA6B,EAAM,QAAnC,GAAA,EAAA,CAAA,QAAmC,CAAnC;QAIM,OAHOkB,0BAAI,CAIT,SAAS,EACT,SAAS,EACT,SAAS,EACT,IAAI,EACJ,QAAQ,GAHG,SAAA,GAAYnB,sBAAI,CAAWC,qBAAI,CAAU,aAAC,CAAa,EAIlEH,kCAHI,CAIC,aAHC,CAAa,MAAC,CAAM,GAJlC,KAAA,GAImC,IAAK,GAJxC,KAI4C,EAIlC,SAAS,CACV,EACD,SAAS,CACV,CAHC;KAIH,CAHC,EAIFA,kCAHI,CAAuB,aAAC,CAAa,MAAC,CAAM,EAAE,SAAA,CAAU,EAI5DoB,sBAHI,CAIF;QACEF,uBAHI,CAIFC,8BAHI,CAEdD;YAEYF,mCAHI,CAIF,MAAM,EACNC,+BAHI,CAIFT,2BAHI,CAAgB,iBAAC,CAAiB,MAAC,CAAM,CAAC,EAI9CA,2BAHI,CAAgB,qBAAC,CAAqB,MAAC,CAAM,CAAC,CAInD,CACF;SACb,CAAA,MAAA,CAAe,MAHC,CAAM,UAAC,CAAU,GAAC,CAAG,UAAC,EAAO,EAG7C;YAHA,IAAwC,IAAxC,GAAA,EAAA,CAAA,IAAwC,CAAxC;YAIc,OAHOO,4CAAI,CAAiC,IAAC,EAAK,SAAA,CAAU,CAAC;SAI9D,CAHC,CAGd,CAFY,CAIH;KACF,EACD,IAAI,CACL,CACF,CAHC;CAIH;;;;;AD3CD,SAAA,oBAAA,CAHC,OAAA,EAGD;IAFQ,IAAA,cAAR,GAAA,OAAA,CAAA,CAAA,CAAU,CAAyB;IAKjC,OAHOD,gCAAI,CAIT,SAAS,EACT,CAACZ,sBAHI,CAAWC,qBAAI,CAAU,aAAC,CAAa,CAAC,EAI7C,iBAAiB,CAHC,cAAC,CAAc,EAIjC,OAAO;SACJ,GAHC,CAAG,UAAA,MAAC,EAGZ,EAAA,QAHqB;QAIb,IAAI,EAHE,qBAAA,CAAsB,MAAC,CAAM;QAInC,KAAK,EAHE,aAAA,CAAc,MAAC,CAAM;KAI7B,EAAP,EAHQ,CAAC;SAIF,GAHC,CAAG,UAAC,EAAc,EAG1B;QAHA,IAAc,IAAd,GAAA,EAAA,CAAA,IAAc,EAAM,KAApB,GAAA,EAAA,CAAA,KAAoB,CAApB;QAIQ,OAHOS,2BAAI,CAAgB,IAAC,EAAKC,wBAAI,CAAa,KAAC,CAAK,CAAC,CAAC;KAI3D,CAHC,CAIL,CAHC;CAIH;;;;;;ADpBD,SAAA,sBAAA,CACE,QAAgB,EAChB,OAA0B,EAF5B;IAIE,OAJOJ,kCAAI,CAKT,SAAS,EACT,SAAS,EACTC,6BAJI,CAKF,SAAS,EACTC,6BAJI,CAKF,OAAO;SACJ,GAJC,CAAG,aAAC,CAAa;SAKlB,GAJC,CAAG,UAAA,IAAC,EAIhB,EACYJ,OAAAA,gCAJI,CAAqB,SAAC,EAAUC,2BAAI,CAAgB,IAAC,CAAI,CAAC,CAG1E,EAH0E,CAK/D,CACJ,CACF,EACDA,2BAJI,CAAgB,KADxB,GACyB,QAAM,GAD/B,GACuC,CAAG,CAKvC,CAJC;CAKH;;;;;ADfD,SAAA,8BAAA,CAHC,OAAA,EAGD;IAFQ,IAAA,WAAR,GAAA,OAAA,CAAA,CAAA,CAAU,CAAsB;IAK9B,OAHOP,qCAAI,CAIT,SAAS,EACT,CAACC,sBAHI,CAAWC,qBAAI,CAAU,aAAC,CAAa,CAAC,EAI7C,mBAAmB,CAHC,WAAC,CAAW,EAIhC,SAAS,EACTG,gCAHI,CAIF,OAAO,CAHC,GAAC,CAAG,UAAA,MAAC,EAHnB;QAOQ,OAHOD,kCAAI,CAIT,SAAS,EACT,IAAI,CAHC,SAAC,CAAS,aAAC,CAAa,MAAC,CAAM,CAAC,EAIrC,SAAS,EACTL,kCAHI,CAAuB,aAAC,CAAa,MAAC,CAAM,EAAE,SAAA,CAAU,EAI5D,SAAS,CACV,CAHC;KAIH,CAHC,CAIH,CACF,CAHC;CAIH;;;;;ADrBD,SAAA,yBAAA,CAHC,OAAA,EAGD;IAFQ,IAAA,WAAR,GAAA,OAAA,CAAA,CAAA,CAAU,CAAsB;IAK9B,OAHOC,qCAAI,CAIT,SAAS,EACT,CAACC,sBAHI,CAAWC,qBAAI,CAAU,aAAC,CAAa,CAAC,EAI7C,kBAAkB,CAHC,WAAC,CAAW,EAI/B,SAAS,EACTC,8BAHI,CAIF,OAAO;SACJ,GAHC,CAAG,aAAC,CAAa;SAIlB,GAHC,CAAG,UAAA,IAAC,EAGd,EAHqBJ,OAAAA,kCAAI,CAAuB,IAAC,EAAK,SAAA,CAAU,CAGhE,EAHgE,CAAC,CAI5D,CACF,CAHC;CAIH;;;;;;ADND,SAAA,eAAA,CACE,QAAgB,EAChB,UAAyB,EAF3B;IAIE,qBAJM,UAAA,GAAa,UAAA,CAAW,UAAC;SAK5B,MAJC,CAAMD,iCAAI,CAAsB;SAKjC,MAJC,CAAMD,UAAW,CAAU;SAK5B,MAJC,CAAMD,kBAAW,CAAkB;SAKpC,MAJC,CAAM,UAAA,CAAC,EAIb,EAJiB,OAAA,CAAA,CAAED,OAAW,CAAO,CAAC,CAAC,CAIvC,EAJuC,CAAC;SAKnC,GAJC,CAAG,UAAC,SAAC,EAIX,EAAA,QAJyC;QAKnC,IAAI,EAJE,SAAA,CAAU,IAAC,CAAI,OAAC,EAAO;QAK7B,UAAU,EAJED,WAAG,kBAAI,EAKjBC,OAJW,CAAO,SAAC,CAAS,GAAE,OAAC,CAAO,WAAC,EAAW,EAKlD,OAAO,CACR;QACD,UAAU,EACLJ,qBAJW,CAAqBC,aAAW,CAAa,SAAC,CAAS,CAAC,CAG9E,MAAA,CAEWC,qBAJW,CAAqBD,aAAW,CAAa,SAAC,CAAS,CAAC,CAKvE;KACF,EAAL,EAJM,CAAC,CAAC;IAMN,IAAI,UAJC,CAAU,MAAC,KAAU,CAAA,EAAG;QAK3B,SAAS,CAJC;KAKX;IAED,OAAF;QACIF,sBAJU,CAAsB,QAAC,EAAS,UAAA,CAAW;QAKrDD,oBAJU,CAAoB,UAAC,CAAU;QAKzCD,yBAJU,CAAyB,UAAC,CAAU;QAK9CD,8BAJU,CAA8B,UAAC,CAAU;KAKvD,CAAA,MAAA,CAAO,UAJC,CAAU,GAAC,CAAG,UAAA,MAAC,EAIvB,EAJgCD,OAAAA,6BAAU,CAA6B,MAAC,CAAM,CAI9E,EAJ8E,CAAC,CAI/E,CAHI;CAKH;;;;;AAKD,SAAA,kBAAA,CAPC,GAAA,EAOD;IACE,qBAPM,UAAA,GAAaT,2BAAI,CAQrB,EAAE,EACF,EAAE,EACFC,uBAPI,CAAY,MAAC,EAQjB,KAAK,EACLO,qBAPI,CAAU,EAAC,CAQhB,CAPC;IASF,qBAPM,OAAA,GAAUF,wBAAI,CAAa,EAAE,OAAA,EAASC,sBAAI,CAAW,QAAC,EAAQ,CAAE,CAAC;IASvE,OAPO,GAAA;SAQJ,GAPC,CAAG,UAAA,SAAC,EAOV,EACM,OAAA,OAAO,CAPC,SAAC,CAASF,mBAAI,CAAQ,WAAC,EAAY,SAAA,EAAW,UAAA,CAAW,CAMvE,EANuE,CAQlE;SACA,IAPC,CAAI,MAAC,CAAM,CAAC;CAQjB;ADtED,IAAM,IAAA,GAAO,OAAA,CAAQ,MAAC,CAAM,CAAC;;;;;AAK7B,SAAA,SAAA,CAHC,WAAA,EAGD;IACE,OAHO,IAAI,OAAA,CAAQ,UAACH,UAAC,EAAQ,MAAA,EAG/B;QACI,IAAI,CACF,WAAW,EACX,EAHE,GAAA,EAAK,OAAA,CAAQ,GAAC,EAAG,EAAG,MAAA,EAAQ,CAAA,oBAAE,CAAoB,EAAC,EAIrD,UAAC,KAHO,EAAK,KAAc,EAAjC;YAIQ,IAAI,KAHC,EAAM;gBAIT,OAHO,MAAA,CAAO,KAAC,CAAK,CAAC;aAItB;YAEDA,UAAO,CAHC,KAAC,CAAK,CAAC;SAIhB,CACF,CAHC;KAIH,CAHC,CAAC;CAIJ;;;;;;;;;;;;;;;;;;;ADpBD,IAKM,GAAA,GAAM,OAAA,CAAQ,KAAC,CAAK,CAAC;;;;;AAK3B,SAAA,UAAA,CAHC,IAAA,EAGD;;;YACE,OAAF,CAAA,CAAA,aAHS,IAAI,OAAA,CAAe,UAAEA,UAAC,EAAQ,MAAA,EAGvC;oBACIE,WAHI,CAAQ,IAAC,EAAK,MAAA,EAAQ,UAAA,KAAE,EAAM,IAAA,EAGtCA;wBACM,IAAI,KAHC,EAAM;4BAIT,MAAM,CAHC,KAAC,CAAK,CAAC;yBAIf;6BAHM;4BAILF,UAAO,CAHC,IAAC,CAAI,CAAC;yBAIf;qBACF,CAHC,CAAC;iBAIJ,CAHC,CAGJ,CAHK;;KAIJ,CAAD,CAAA;CAAC;;;;;;AAMD,SAAA,WAAA,CAPC,IAAA,EAAA,QAAA,EAOD;;;YACE,OAAF,CAAA,CAAA,aAPS,IAAI,OAAA,CAAQ,UAACA,UAAC,EAAQ,MAAA,EAO/B;oBACIC,YAPI,CAAS,IAAC,EAAK,QAAA,EAAU,EAAE,QAAA,EAAU,MAAA,EAAO,EAAG,UAAA,KAAA,EAOvDA;wBACM,IAAI,KAPC,EAAM;4BAQT,MAAM,CAPC,KAAC,CAAK,CAAC;yBAQf;6BAPM;4BAQLD,UAAO,EAPC,CAAE;yBAQX;qBACF,CAPC,CAAC;iBAQJ,CAPC,CAOJ,CAPK;;KAQJ,CAAD,CAAA;CAAC;;;;;AAKD,SAAA,kBAAA,CAVC,IAAA,EAUD;IACE,OAVOF,2BAAI,CAAgB,EAAC,EAAG,IAAA,EAAMC,uBAAI,CAAY,MAAC,EAAO,IAAA,CAAK,CAAC;CAWpE;;;;;AAKD,SAAA,OAAA,CAbC,IAAA,EAaD;;;;;;oBAZQ,cAAA,GAAiB,GAAA,CAAI,iCAA7B,GAA8B,IAAiC,GAA/D,IAAmE,CAAG,CAAC,KAAC,EAAK,CAAE;oBAC/D,OAAhB,CAAA,CAAA,YAAsB,SAAA,CAAU,IAAC,CAAI,CAArC,CAAqC;;oBAA7B,KAAA,GAAQ,EAAhB,CAAA,IAAA,EAAqC,CAArC;oBAcE,cAAc,CAbC,OAAC,CAAO,QAazB,GAb0B,KAAS,CAAK,MAAC,GAazC,uBAAA,GAb+C,IAAuB,GAatE,IAb0E,CAAG,CAAC;oBAE9E,EAAA,GAAA,CAAmB,EAAA,OAAnB,GAAA,KAAmB,CAAnB;;;oBAAA,IAAA,EAAmB,EAAnB,GAAA,OAAA,CAAA,MAAmB,CAAA,EAAnB,OAAA,CAAA,CAAA,YAAA,CAAA,CAAA,CAAA;oBAAW,IAAA,GAAX,OAAA,CAAA,EAAA,CAAA,CAAA;oBACU,SAAA,GAAY,GAAA,CAAI,IAAC,CAAI,CAAC,KAAC,EAAK,CAAE;;;;oBAG5B,UAAA,GAAaF,UAAM,CAAK,IAAC,CAAI,CAAC;oBACnB,OAAvB,CAAA,CAAA,YAA6BD,UAAA,CAAS,IAAC,CAAI,CAA3C,CAA2C;;oBAA/B,QAAA,GAAW,EAAvB,CAAA,IAAA,EAA2C,CAA3C;oBACY,UAAA,GAAaD,kBAAA,CAAiB,QAAC,CAAQ,CAAC;oBACxC,GAAA,GAAM,eAAA,CAAgB,UAAC,CAAU,IAAC,EAAK,UAAA,CAAW,CAAC;oBAezD,IAAI,CAbC,GAAC,EAAI;wBAcR,MAbM,IAAI,KAAA,CAAM,8BAaxB,GAbyB,IAA8B,GAavD,IAb2D,CAAG,CAAC;qBAcxD;oBAXK,MAAA,GAAS,kBAAA,CAAmB,GAAC,CAAG,CAAC;oBACjC,MAAA,GAASD,YAAM,CAcnB,UAAU,CAbC,GAAC,EAcZ,IAfR,GAea,UAbC,CAAU,IAAC,GAFzB,aAE6B,CActB,CAbC;oBAcF,OAAN,CAAA,CAAA,YAbYD,WAAA,CAAU,MAAC,EAAO,MAAA,CAAO,CAarC,CAbqC;;oBAa/B,EAAN,CAAA,IAAA,EAbqC,CAAC;oBAehC,SAAS,CAbC,OAAC,CAAO,QAaxB,GAbyB,GAAS,CAAG,MAAC,GAatC,cAAA,GAb4C,IAAmB,CAAE,CAAC;;;;oBAe5D,SAAS,CAbC,IAAC,CAAI,EAAC,GAAK,GAAO,OAAC,CAAO,CAAC;;;oBAtBxB,EAAnB,EAAmB,CAAA;;;;;KAsClB,CAAD,CAAA;CAAC;;;;;;;;;;;;"}